/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 5.4.0-6ubuntu1~16.04.4 -O2 -fstack-protector-strong -fPIC -Os) */

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=0 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _154_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _154_ & rst_n;
  assign _155_ = ~(angle_in[1] ^ angle_adj[1]);
  assign _156_ = ~(angle_in[0] & angle_adj[0]);
  assign _157_ = ~angle_in[0];
  assign _158_ = ~(_157_ & angle_adj[0]);
  assign _159_ = angle_in[7] ? _156_ : _158_;
  assign _160_ = _159_ ^ _155_;
  assign _000_[1] = _160_ & rst_n;
  assign _161_ = angle_in[2] ^ angle_adj[2];
  assign _162_ = ~_161_;
  assign _163_ = ~angle_in[7];
  assign _164_ = ~angle_adj[1];
  assign _165_ = angle_in[1] | _164_;
  assign _166_ = angle_in[1] & _164_;
  assign _167_ = ~((_158_ | _166_) & _165_);
  assign _168_ = ~_167_;
  assign _169_ = ~(angle_in[1] & angle_adj[1]);
  assign _170_ = ~((_155_ | _156_) & _169_);
  assign _171_ = ~_170_;
  assign _172_ = _163_ ? _168_ : _171_;
  assign _173_ = _172_ | _162_;
  assign _174_ = ~rst_n;
  assign _175_ = ~((_172_ & _162_) | _174_);
  assign _000_[2] = _175_ & _173_;
  assign _176_ = ~angle_adj[3];
  assign _177_ = angle_in[3] | _176_;
  assign _178_ = angle_in[3] & _176_;
  assign _179_ = ~_178_;
  assign _180_ = _179_ & _177_;
  assign _181_ = ~angle_in[2];
  assign _182_ = _181_ & angle_adj[2];
  assign _183_ = _181_ | angle_adj[2];
  assign _184_ = ~((_167_ & _183_) | _182_);
  assign _185_ = angle_in[2] & angle_adj[2];
  assign _186_ = ~((_170_ & _161_) | _185_);
  assign _187_ = _163_ ? _184_ : _186_;
  assign _188_ = _187_ ^ _180_;
  assign _000_[3] = _188_ & rst_n;
  assign _189_ = ~angle_in[4];
  assign _190_ = _189_ & angle_adj[4];
  assign _191_ = ~_190_;
  assign _003_ = _189_ | angle_adj[4];
  assign _004_ = ~(_003_ & _191_);
  assign _005_ = ~_004_;
  assign _006_ = ~(angle_in[3] | angle_adj[3]);
  assign _007_ = ~(angle_in[3] & angle_adj[3]);
  assign _008_ = ~((_007_ & _186_) | _006_);
  assign _009_ = _008_ | _163_;
  assign _010_ = ~((_184_ & _177_) | _178_);
  assign _011_ = ~((_010_ | angle_in[7]) & _009_);
  assign _012_ = _011_ | _005_;
  assign _013_ = ~((_011_ & _005_) | _174_);
  assign _000_[4] = _013_ & _012_;
  assign _014_ = ~angle_adj[5];
  assign _015_ = angle_in[5] | _014_;
  assign _016_ = angle_in[5] & _014_;
  assign _017_ = ~_016_;
  assign _018_ = _017_ & _015_;
  assign _019_ = angle_in[4] & angle_adj[4];
  assign _020_ = ~((_008_ & _004_) | _019_);
  assign _021_ = ~((_010_ | _190_) & _003_);
  assign _022_ = angle_in[7] ? _020_ : _021_;
  assign _023_ = _022_ | _018_;
  assign _024_ = ~((_022_ & _018_) | _174_);
  assign _000_[5] = _024_ & _023_;
  assign _025_ = angle_in[6] ^ angle_adj[6];
  assign _026_ = ~((_021_ & _015_) | _016_);
  assign _027_ = _026_ & _025_;
  assign _028_ = ~((_026_ | _025_) & _163_);
  assign _029_ = ~(angle_in[5] & angle_adj[5]);
  assign _030_ = ~(angle_in[5] | angle_adj[5]);
  assign _031_ = ~((_030_ | _020_) & _029_);
  assign _032_ = _031_ & _025_;
  assign _033_ = ~((_031_ | _025_) & angle_in[7]);
  assign _034_ = ~((_033_ | _032_) & (_028_ | _027_));
  assign _000_[6] = _034_ & rst_n;
  assign _035_ = ~angle_adj[6];
  assign _036_ = angle_in[6] & _035_;
  assign _037_ = angle_in[6] & angle_adj[6];
  assign _038_ = ~((_037_ | _032_) & angle_in[7]);
  assign _039_ = ~((_028_ | _036_) & _038_);
  assign _040_ = angle_adj[7] ^ angle_in[7];
  assign _041_ = _040_ | _039_;
  assign _042_ = ~((_040_ & _039_) | _174_);
  assign _000_[7] = _042_ & _041_;
  assign _043_ = x_in[0] ^ y_in[0];
  assign _002_[0] = _043_ & rst_n;
  assign _044_ = x_in[1] ^ y_in[1];
  assign _045_ = ~x_in[0];
  assign _046_ = ~(_045_ | y_in[0]);
  assign _047_ = _046_ ^ _044_;
  assign _048_ = x_in[0] & y_in[0];
  assign _049_ = _044_ ^ _048_;
  assign _050_ = angle_in[7] ? _047_ : _049_;
  assign _002_[1] = _050_ & rst_n;
  assign _051_ = x_in[2] ^ y_in[2];
  assign _052_ = ~_051_;
  assign _053_ = _046_ | _044_;
  assign _054_ = ~y_in[1];
  assign _055_ = x_in[1] | _054_;
  assign _056_ = _055_ & _053_;
  assign _057_ = _056_ ^ _052_;
  assign _058_ = x_in[1] & y_in[1];
  assign _059_ = _044_ & _048_;
  assign _060_ = _059_ | _058_;
  assign _061_ = _060_ ^ _051_;
  assign _062_ = ~((_061_ | angle_in[7]) & rst_n);
  assign _002_[2] = ~((_057_ & angle_in[7]) | _062_);
  assign _063_ = ~(x_in[3] | y_in[3]);
  assign _064_ = ~_063_;
  assign _065_ = ~(x_in[3] & y_in[3]);
  assign _066_ = _065_ & _064_;
  assign _067_ = ~((_055_ & _053_) | _051_);
  assign _068_ = ~y_in[2];
  assign _069_ = ~(x_in[2] | _068_);
  assign _070_ = ~(_069_ | _067_);
  assign _071_ = _070_ ^ _066_;
  assign _072_ = ~_066_;
  assign _073_ = x_in[2] & y_in[2];
  assign _074_ = ~((_060_ & _051_) | _073_);
  assign _075_ = _074_ ^ _072_;
  assign _076_ = angle_in[7] ? _071_ : _075_;
  assign _002_[3] = _076_ & rst_n;
  assign _077_ = x_in[4] ^ y_in[4];
  assign _078_ = ~y_in[3];
  assign _079_ = ~(x_in[3] | _078_);
  assign _080_ = ~_079_;
  assign _081_ = x_in[3] & _078_;
  assign _082_ = ~_081_;
  assign _083_ = ~((_069_ | _067_) & _082_);
  assign _084_ = ~(_083_ & _080_);
  assign _085_ = _084_ ^ _077_;
  assign _086_ = ~((_074_ | _063_) & _065_);
  assign _087_ = _086_ ^ _077_;
  assign _088_ = ~((_087_ | angle_in[7]) & rst_n);
  assign _002_[4] = ~((_085_ & angle_in[7]) | _088_);
  assign _089_ = ~(x_in[5] | y_in[5]);
  assign _090_ = x_in[5] & y_in[5];
  assign _091_ = _090_ | _089_;
  assign _092_ = ~((_083_ & _080_) | _077_);
  assign _093_ = ~x_in[4];
  assign _094_ = _093_ & y_in[4];
  assign _095_ = ~(_094_ | _092_);
  assign _096_ = _095_ ^ _091_;
  assign _097_ = x_in[4] & y_in[4];
  assign _098_ = ~((_086_ & _077_) | _097_);
  assign _099_ = _098_ ^ _091_;
  assign _100_ = ~((_099_ | angle_in[7]) & rst_n);
  assign _002_[5] = ~((_096_ & angle_in[7]) | _100_);
  assign _101_ = x_in[6] ^ y_in[6];
  assign _102_ = ~x_in[5];
  assign _103_ = _102_ | y_in[5];
  assign _104_ = ~_103_;
  assign _105_ = _102_ & y_in[5];
  assign _106_ = ~_105_;
  assign _107_ = ~((_106_ & _095_) | _104_);
  assign _108_ = _107_ ^ _101_;
  assign _109_ = ~_090_;
  assign _110_ = ~((_098_ | _089_) & _109_);
  assign _111_ = _110_ ^ _101_;
  assign _112_ = ~((_111_ | angle_in[7]) & rst_n);
  assign _002_[6] = ~((_108_ & angle_in[7]) | _112_);
  assign _113_ = ~(x_in[7] ^ y_in[7]);
  assign _114_ = ~_101_;
  assign _115_ = ~x_in[6];
  assign _116_ = _115_ & y_in[6];
  assign _117_ = ~((_107_ & _114_) | _116_);
  assign _118_ = _117_ ^ _113_;
  assign _119_ = x_in[6] & y_in[6];
  assign _120_ = ~((_110_ & _101_) | _119_);
  assign _121_ = _120_ ^ _113_;
  assign _122_ = ~((_121_ | angle_in[7]) & rst_n);
  assign _002_[7] = ~((_118_ & angle_in[7]) | _122_);
  assign _123_ = _045_ & y_in[0];
  assign _124_ = _123_ & _044_;
  assign _125_ = ~((_045_ & y_in[0]) | _044_);
  assign _126_ = ~((_125_ | _124_) & _163_);
  assign _127_ = _049_ | _163_;
  assign _128_ = _127_ & rst_n;
  assign _001_[1] = _128_ & _126_;
  assign _129_ = ~((x_in[1] & _054_) | _125_);
  assign _130_ = _129_ & _051_;
  assign _131_ = ~(_129_ | _051_);
  assign _132_ = ~((_131_ | _130_) & _163_);
  assign _133_ = _061_ | _163_;
  assign _134_ = _133_ & rst_n;
  assign _001_[2] = _134_ & _132_;
  assign _135_ = x_in[2] & _068_;
  assign _136_ = ~(_135_ | _131_);
  assign _137_ = _136_ ^ _072_;
  assign _138_ = ~((_075_ | _163_) & rst_n);
  assign _001_[3] = ~((_137_ & _163_) | _138_);
  assign _139_ = ~((_136_ | _079_) & _082_);
  assign _140_ = _139_ ^ _077_;
  assign _141_ = ~((_087_ | _163_) & rst_n);
  assign _001_[4] = ~((_140_ & _163_) | _141_);
  assign _142_ = ~_077_;
  assign _143_ = ~(_093_ | y_in[4]);
  assign _144_ = ~((_139_ & _142_) | _143_);
  assign _145_ = _144_ ^ _091_;
  assign _146_ = ~((_099_ | _163_) & rst_n);
  assign _001_[5] = ~((_145_ & _163_) | _146_);
  assign _147_ = ~((_144_ | _105_) & _103_);
  assign _148_ = _147_ ^ _101_;
  assign _149_ = ~((_111_ | _163_) & rst_n);
  assign _001_[6] = ~((_148_ & _163_) | _149_);
  assign _150_ = ~(_115_ | y_in[6]);
  assign _151_ = ~((_147_ & _114_) | _150_);
  assign _152_ = _151_ ^ _113_;
  assign _153_ = ~((_121_ | _163_) & rst_n);
  assign _001_[7] = ~((_152_ & _163_) | _153_);
  assign _001_[0] = _043_ & rst_n;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = x_in;
  assign shifted_y = y_in;
  assign sign = angle_in[7];
endmodule

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=1 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _191_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _191_ & rst_n;
  assign _192_ = ~(angle_in[1] ^ angle_adj[1]);
  assign _193_ = ~(angle_in[0] & angle_adj[0]);
  assign _194_ = ~angle_in[0];
  assign _195_ = ~(_194_ & angle_adj[0]);
  assign _196_ = angle_in[7] ? _193_ : _195_;
  assign _197_ = _196_ ^ _192_;
  assign _000_[1] = _197_ & rst_n;
  assign _198_ = angle_in[2] ^ angle_adj[2];
  assign _199_ = ~_198_;
  assign _200_ = ~angle_in[7];
  assign _201_ = ~angle_adj[1];
  assign _202_ = angle_in[1] | _201_;
  assign _203_ = angle_in[1] & _201_;
  assign _204_ = ~((_195_ | _203_) & _202_);
  assign _205_ = ~_204_;
  assign _206_ = ~(angle_in[1] & angle_adj[1]);
  assign _207_ = ~((_192_ | _193_) & _206_);
  assign _208_ = ~_207_;
  assign _209_ = _200_ ? _205_ : _208_;
  assign _210_ = _209_ | _199_;
  assign _211_ = ~rst_n;
  assign _212_ = ~((_209_ & _199_) | _211_);
  assign _000_[2] = _212_ & _210_;
  assign _213_ = ~angle_adj[3];
  assign _214_ = angle_in[3] | _213_;
  assign _215_ = angle_in[3] & _213_;
  assign _216_ = ~_215_;
  assign _217_ = _216_ & _214_;
  assign _218_ = ~angle_in[2];
  assign _219_ = _218_ & angle_adj[2];
  assign _220_ = _218_ | angle_adj[2];
  assign _221_ = ~((_204_ & _220_) | _219_);
  assign _222_ = angle_in[2] & angle_adj[2];
  assign _223_ = ~((_207_ & _198_) | _222_);
  assign _224_ = _200_ ? _221_ : _223_;
  assign _225_ = _224_ ^ _217_;
  assign _000_[3] = _225_ & rst_n;
  assign _226_ = ~angle_in[4];
  assign _227_ = _226_ & angle_adj[4];
  assign _228_ = ~_227_;
  assign _003_ = _226_ | angle_adj[4];
  assign _004_ = ~(_003_ & _228_);
  assign _005_ = ~_004_;
  assign _006_ = ~(angle_in[3] | angle_adj[3]);
  assign _007_ = ~(angle_in[3] & angle_adj[3]);
  assign _008_ = ~((_007_ & _223_) | _006_);
  assign _009_ = _008_ | _200_;
  assign _010_ = ~((_221_ & _214_) | _215_);
  assign _011_ = ~((_010_ | angle_in[7]) & _009_);
  assign _012_ = _011_ | _005_;
  assign _013_ = ~((_011_ & _005_) | _211_);
  assign _000_[4] = _013_ & _012_;
  assign _014_ = ~angle_adj[5];
  assign _015_ = angle_in[5] | _014_;
  assign _016_ = angle_in[5] & _014_;
  assign _017_ = ~_016_;
  assign _018_ = _017_ & _015_;
  assign _019_ = angle_in[4] & angle_adj[4];
  assign _020_ = ~((_008_ & _004_) | _019_);
  assign _021_ = ~((_010_ | _227_) & _003_);
  assign _022_ = angle_in[7] ? _020_ : _021_;
  assign _023_ = _022_ | _018_;
  assign _024_ = ~((_022_ & _018_) | _211_);
  assign _000_[5] = _024_ & _023_;
  assign _025_ = angle_in[6] ^ angle_adj[6];
  assign _026_ = ~((_021_ & _015_) | _016_);
  assign _027_ = _026_ & _025_;
  assign _028_ = ~((_026_ | _025_) & _200_);
  assign _029_ = ~(angle_in[5] & angle_adj[5]);
  assign _030_ = ~(angle_in[5] | angle_adj[5]);
  assign _031_ = ~((_030_ | _020_) & _029_);
  assign _032_ = _031_ & _025_;
  assign _033_ = ~((_031_ | _025_) & angle_in[7]);
  assign _034_ = ~((_033_ | _032_) & (_028_ | _027_));
  assign _000_[6] = _034_ & rst_n;
  assign _035_ = ~angle_adj[6];
  assign _036_ = angle_in[6] & _035_;
  assign _037_ = angle_in[6] & angle_adj[6];
  assign _038_ = ~((_037_ | _032_) & angle_in[7]);
  assign _039_ = ~((_028_ | _036_) & _038_);
  assign _040_ = angle_adj[7] ^ angle_in[7];
  assign _041_ = _040_ | _039_;
  assign _042_ = ~((_040_ & _039_) | _211_);
  assign _000_[7] = _042_ & _041_;
  assign _043_ = y_in[0] ^ x_in[1];
  assign _002_[0] = _043_ & rst_n;
  assign _044_ = ~(x_in[2] ^ y_in[1]);
  assign _045_ = y_in[0] & x_in[1];
  assign _046_ = ~_045_;
  assign _047_ = ~x_in[1];
  assign _048_ = y_in[0] | _047_;
  assign _049_ = _200_ ? _046_ : _048_;
  assign _050_ = _049_ | _044_;
  assign _051_ = ~((_049_ & _044_) | _211_);
  assign _002_[1] = _051_ & _050_;
  assign _052_ = x_in[3] | y_in[2];
  assign _053_ = ~(x_in[3] & y_in[2]);
  assign _054_ = _053_ & _052_;
  assign _055_ = ~_054_;
  assign _056_ = x_in[2] | y_in[1];
  assign _057_ = x_in[2] & y_in[1];
  assign _058_ = ~((_056_ & _045_) | _057_);
  assign _059_ = ~x_in[2];
  assign _060_ = _059_ & y_in[1];
  assign _061_ = ~((_048_ & _044_) | _060_);
  assign _062_ = ~_061_;
  assign _063_ = _200_ ? _058_ : _062_;
  assign _064_ = _063_ | _055_;
  assign _065_ = ~((_063_ & _055_) | _211_);
  assign _002_[2] = _065_ & _064_;
  assign _066_ = ~x_in[4];
  assign _067_ = _066_ & y_in[3];
  assign _068_ = ~_067_;
  assign _069_ = _066_ | y_in[3];
  assign _070_ = _069_ & _068_;
  assign _071_ = ~_052_;
  assign _072_ = _058_ | _071_;
  assign _073_ = ~(_072_ & _053_);
  assign _074_ = ~_073_;
  assign _075_ = ~y_in[2];
  assign _076_ = x_in[3] | _075_;
  assign _077_ = ~((_061_ | _054_) & _076_);
  assign _078_ = _200_ ? _074_ : _077_;
  assign _079_ = _078_ ^ _070_;
  assign _002_[3] = _079_ & rst_n;
  assign _080_ = ~(x_in[5] | y_in[4]);
  assign _081_ = x_in[5] & y_in[4];
  assign _082_ = ~(_081_ | _080_);
  assign _083_ = x_in[4] | y_in[3];
  assign _084_ = x_in[4] & y_in[3];
  assign _085_ = ~((_084_ | _073_) & _083_);
  assign _086_ = ~_085_;
  assign _087_ = ~((_077_ & _069_) | _067_);
  assign _088_ = _200_ ? _086_ : _087_;
  assign _089_ = _088_ ^ _082_;
  assign _002_[4] = _089_ & rst_n;
  assign _090_ = ~x_in[6];
  assign _091_ = _090_ & y_in[5];
  assign _092_ = ~_091_;
  assign _093_ = _090_ | y_in[5];
  assign _094_ = _093_ & _092_;
  assign _095_ = ~_081_;
  assign _096_ = ~((_085_ | _080_) & _095_);
  assign _097_ = ~_096_;
  assign _098_ = ~y_in[4];
  assign _099_ = x_in[5] | _098_;
  assign _100_ = ~((_087_ | _082_) & _099_);
  assign _101_ = _200_ ? _097_ : _100_;
  assign _102_ = _101_ ^ _094_;
  assign _002_[5] = _102_ & rst_n;
  assign _103_ = ~(x_in[7] | y_in[6]);
  assign _104_ = ~_103_;
  assign _105_ = ~(x_in[7] & y_in[6]);
  assign _106_ = _105_ & _104_;
  assign _107_ = x_in[6] & y_in[5];
  assign _108_ = ~(x_in[6] | y_in[5]);
  assign _109_ = ~_108_;
  assign _110_ = ~((_109_ & _096_) | _107_);
  assign _111_ = ~((_100_ & _093_) | _091_);
  assign _112_ = ~(_111_ | _200_);
  assign _113_ = ~((_110_ & _200_) | _112_);
  assign _114_ = _113_ ^ _106_;
  assign _002_[6] = _114_ & rst_n;
  assign _115_ = _110_ & _105_;
  assign _116_ = _103_ | angle_in[7];
  assign _117_ = ~(_111_ | _106_);
  assign _118_ = ~y_in[6];
  assign _119_ = ~((x_in[7] | _118_) & angle_in[7]);
  assign _120_ = ~((_119_ | _117_) & (_116_ | _115_));
  assign _121_ = x_in[7] ^ y_in[7];
  assign _122_ = _121_ ^ _120_;
  assign _002_[7] = _122_ & rst_n;
  assign _123_ = x_in[0] ^ y_in[1];
  assign _001_[0] = _123_ & rst_n;
  assign _124_ = ~(x_in[1] ^ y_in[2]);
  assign _125_ = ~(x_in[0] & y_in[1]);
  assign _126_ = ~x_in[0];
  assign _127_ = ~(_126_ & y_in[1]);
  assign _128_ = angle_in[7] ? _125_ : _127_;
  assign _129_ = _128_ ^ _124_;
  assign _001_[1] = _129_ & rst_n;
  assign _130_ = _059_ & y_in[3];
  assign _131_ = ~(_059_ | y_in[3]);
  assign _132_ = _131_ | _130_;
  assign _133_ = ~_132_;
  assign _134_ = x_in[1] | _075_;
  assign _135_ = x_in[1] & _075_;
  assign _136_ = ~((_127_ | _135_) & _134_);
  assign _137_ = ~_136_;
  assign _138_ = x_in[1] & y_in[2];
  assign _139_ = ~(_124_ | _125_);
  assign _140_ = _139_ | _138_;
  assign _141_ = ~_140_;
  assign _142_ = _200_ ? _137_ : _141_;
  assign _143_ = _142_ | _133_;
  assign _144_ = ~((_142_ & _133_) | _211_);
  assign _001_[2] = _144_ & _143_;
  assign _145_ = x_in[3] | _098_;
  assign _146_ = x_in[3] & _098_;
  assign _147_ = ~_146_;
  assign _148_ = _147_ & _145_;
  assign _149_ = _059_ | y_in[3];
  assign _150_ = ~((_136_ & _149_) | _130_);
  assign _151_ = x_in[2] & y_in[3];
  assign _152_ = ~((_140_ & _132_) | _151_);
  assign _153_ = _200_ ? _150_ : _152_;
  assign _154_ = _153_ ^ _148_;
  assign _001_[3] = _154_ & rst_n;
  assign _155_ = _066_ & y_in[5];
  assign _156_ = ~(_066_ | y_in[5]);
  assign _157_ = _156_ | _155_;
  assign _158_ = ~((_150_ & _145_) | _146_);
  assign _159_ = ~(x_in[3] | y_in[4]);
  assign _160_ = ~(x_in[3] & y_in[4]);
  assign _161_ = ~((_160_ & _152_) | _159_);
  assign _162_ = _200_ ? _158_ : _161_;
  assign _163_ = _162_ ^ _157_;
  assign _001_[4] = _163_ & rst_n;
  assign _164_ = x_in[5] | _118_;
  assign _165_ = x_in[5] & _118_;
  assign _166_ = ~_165_;
  assign _167_ = _166_ & _164_;
  assign _168_ = x_in[4] & y_in[5];
  assign _169_ = ~((_161_ & _157_) | _168_);
  assign _170_ = ~_156_;
  assign _171_ = ~((_158_ | _155_) & _170_);
  assign _172_ = angle_in[7] ? _169_ : _171_;
  assign _173_ = _172_ | _167_;
  assign _174_ = ~((_172_ & _167_) | _211_);
  assign _001_[5] = _174_ & _173_;
  assign _175_ = ~(x_in[6] ^ y_in[7]);
  assign _176_ = ~((_171_ & _164_) | _165_);
  assign _177_ = ~(x_in[5] & y_in[6]);
  assign _178_ = ~((x_in[5] | y_in[6]) & angle_in[7]);
  assign _179_ = ~((_177_ & _169_) | _178_);
  assign _180_ = ~((_176_ & _200_) | _179_);
  assign _181_ = _180_ | _175_;
  assign _182_ = ~((_180_ & _175_) | _211_);
  assign _001_[6] = _182_ & _181_;
  assign _183_ = ~((_090_ & y_in[7]) | _176_);
  assign _184_ = ~((_090_ | y_in[7]) & _200_);
  assign _185_ = ~_175_;
  assign _186_ = x_in[6] & y_in[7];
  assign _187_ = ~((_186_ & angle_in[7]) | (_179_ & _185_));
  assign _188_ = ~((_184_ | _183_) & _187_);
  assign _189_ = _188_ | _121_;
  assign _190_ = ~((_188_ & _121_) | _211_);
  assign _001_[7] = _190_ & _189_;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = { x_in[7], x_in[7:1] };
  assign shifted_y = { y_in[7], y_in[7:1] };
  assign sign = angle_in[7];
endmodule

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=2 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _194_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _194_ & rst_n;
  assign _195_ = ~(angle_in[1] ^ angle_adj[1]);
  assign _196_ = ~(angle_in[0] & angle_adj[0]);
  assign _197_ = ~angle_in[0];
  assign _198_ = ~(_197_ & angle_adj[0]);
  assign _199_ = angle_in[7] ? _196_ : _198_;
  assign _200_ = _199_ ^ _195_;
  assign _000_[1] = _200_ & rst_n;
  assign _201_ = angle_in[2] ^ angle_adj[2];
  assign _202_ = ~_201_;
  assign _203_ = ~angle_in[7];
  assign _204_ = ~angle_adj[1];
  assign _205_ = angle_in[1] | _204_;
  assign _206_ = angle_in[1] & _204_;
  assign _207_ = ~((_198_ | _206_) & _205_);
  assign _208_ = ~_207_;
  assign _209_ = ~(angle_in[1] & angle_adj[1]);
  assign _210_ = ~((_195_ | _196_) & _209_);
  assign _211_ = ~_210_;
  assign _212_ = _203_ ? _208_ : _211_;
  assign _213_ = _212_ | _202_;
  assign _214_ = ~rst_n;
  assign _215_ = ~((_212_ & _202_) | _214_);
  assign _000_[2] = _215_ & _213_;
  assign _216_ = ~angle_adj[3];
  assign _217_ = angle_in[3] | _216_;
  assign _218_ = angle_in[3] & _216_;
  assign _219_ = ~_218_;
  assign _220_ = _219_ & _217_;
  assign _221_ = ~angle_in[2];
  assign _222_ = _221_ & angle_adj[2];
  assign _223_ = _221_ | angle_adj[2];
  assign _224_ = ~((_207_ & _223_) | _222_);
  assign _225_ = angle_in[2] & angle_adj[2];
  assign _226_ = ~((_210_ & _201_) | _225_);
  assign _227_ = _203_ ? _224_ : _226_;
  assign _228_ = _227_ ^ _220_;
  assign _000_[3] = _228_ & rst_n;
  assign _229_ = ~angle_in[4];
  assign _230_ = _229_ & angle_adj[4];
  assign _231_ = ~_230_;
  assign _003_ = _229_ | angle_adj[4];
  assign _004_ = ~(_003_ & _231_);
  assign _005_ = ~_004_;
  assign _006_ = ~(angle_in[3] | angle_adj[3]);
  assign _007_ = ~(angle_in[3] & angle_adj[3]);
  assign _008_ = ~((_007_ & _226_) | _006_);
  assign _009_ = _008_ | _203_;
  assign _010_ = ~((_224_ & _217_) | _218_);
  assign _011_ = ~((_010_ | angle_in[7]) & _009_);
  assign _012_ = _011_ | _005_;
  assign _013_ = ~((_011_ & _005_) | _214_);
  assign _000_[4] = _013_ & _012_;
  assign _014_ = ~angle_adj[5];
  assign _015_ = angle_in[5] | _014_;
  assign _016_ = angle_in[5] & _014_;
  assign _017_ = ~_016_;
  assign _018_ = _017_ & _015_;
  assign _019_ = angle_in[4] & angle_adj[4];
  assign _020_ = ~((_008_ & _004_) | _019_);
  assign _021_ = ~((_010_ | _230_) & _003_);
  assign _022_ = angle_in[7] ? _020_ : _021_;
  assign _023_ = _022_ | _018_;
  assign _024_ = ~((_022_ & _018_) | _214_);
  assign _000_[5] = _024_ & _023_;
  assign _025_ = angle_in[6] ^ angle_adj[6];
  assign _026_ = ~((_021_ & _015_) | _016_);
  assign _027_ = _026_ & _025_;
  assign _028_ = ~((_026_ | _025_) & _203_);
  assign _029_ = ~(angle_in[5] & angle_adj[5]);
  assign _030_ = ~(angle_in[5] | angle_adj[5]);
  assign _031_ = ~((_030_ | _020_) & _029_);
  assign _032_ = _031_ & _025_;
  assign _033_ = ~((_031_ | _025_) & angle_in[7]);
  assign _034_ = ~((_033_ | _032_) & (_028_ | _027_));
  assign _000_[6] = _034_ & rst_n;
  assign _035_ = ~angle_adj[6];
  assign _036_ = angle_in[6] & _035_;
  assign _037_ = angle_in[6] & angle_adj[6];
  assign _038_ = ~((_037_ | _032_) & angle_in[7]);
  assign _039_ = ~((_028_ | _036_) & _038_);
  assign _040_ = angle_adj[7] ^ angle_in[7];
  assign _041_ = _040_ | _039_;
  assign _042_ = ~((_040_ & _039_) | _214_);
  assign _000_[7] = _042_ & _041_;
  assign _043_ = y_in[0] ^ x_in[2];
  assign _002_[0] = _043_ & rst_n;
  assign _044_ = ~(y_in[1] ^ x_in[3]);
  assign _045_ = y_in[0] & x_in[2];
  assign _046_ = ~_045_;
  assign _047_ = ~x_in[2];
  assign _048_ = y_in[0] | _047_;
  assign _049_ = _203_ ? _046_ : _048_;
  assign _050_ = _049_ | _044_;
  assign _051_ = ~((_049_ & _044_) | _214_);
  assign _002_[1] = _051_ & _050_;
  assign _052_ = x_in[4] | y_in[2];
  assign _053_ = ~(x_in[4] & y_in[2]);
  assign _054_ = _053_ & _052_;
  assign _055_ = ~_054_;
  assign _056_ = y_in[1] | x_in[3];
  assign _057_ = y_in[1] & x_in[3];
  assign _058_ = ~((_056_ & _045_) | _057_);
  assign _059_ = ~x_in[3];
  assign _060_ = y_in[1] & _059_;
  assign _061_ = ~((_048_ & _044_) | _060_);
  assign _062_ = ~_061_;
  assign _063_ = _203_ ? _058_ : _062_;
  assign _064_ = _063_ | _055_;
  assign _065_ = ~((_063_ & _055_) | _214_);
  assign _002_[2] = _065_ & _064_;
  assign _066_ = ~x_in[5];
  assign _067_ = _066_ & y_in[3];
  assign _068_ = ~_067_;
  assign _069_ = _066_ | y_in[3];
  assign _070_ = _069_ & _068_;
  assign _071_ = ~_052_;
  assign _072_ = _058_ | _071_;
  assign _073_ = ~(_072_ & _053_);
  assign _074_ = ~_073_;
  assign _075_ = ~y_in[2];
  assign _076_ = x_in[4] | _075_;
  assign _077_ = ~((_061_ | _054_) & _076_);
  assign _078_ = _203_ ? _074_ : _077_;
  assign _079_ = _078_ ^ _070_;
  assign _002_[3] = _079_ & rst_n;
  assign _080_ = ~(x_in[6] | y_in[4]);
  assign _081_ = x_in[6] & y_in[4];
  assign _082_ = ~(_081_ | _080_);
  assign _083_ = x_in[5] | y_in[3];
  assign _084_ = x_in[5] & y_in[3];
  assign _085_ = ~((_084_ | _073_) & _083_);
  assign _086_ = ~_085_;
  assign _087_ = ~((_077_ & _069_) | _067_);
  assign _088_ = _203_ ? _086_ : _087_;
  assign _089_ = _088_ ^ _082_;
  assign _002_[4] = _089_ & rst_n;
  assign _090_ = ~x_in[7];
  assign _091_ = _090_ & y_in[5];
  assign _092_ = ~_091_;
  assign _093_ = _090_ | y_in[5];
  assign _094_ = _093_ & _092_;
  assign _095_ = ~_081_;
  assign _096_ = ~((_085_ | _080_) & _095_);
  assign _097_ = ~_096_;
  assign _098_ = ~y_in[4];
  assign _099_ = x_in[6] | _098_;
  assign _100_ = ~((_087_ | _082_) & _099_);
  assign _101_ = _203_ ? _097_ : _100_;
  assign _102_ = _101_ ^ _094_;
  assign _002_[5] = _102_ & rst_n;
  assign _103_ = ~(x_in[7] | y_in[6]);
  assign _104_ = ~_103_;
  assign _105_ = ~(x_in[7] & y_in[6]);
  assign _106_ = _105_ & _104_;
  assign _107_ = x_in[7] & y_in[5];
  assign _108_ = ~(x_in[7] | y_in[5]);
  assign _109_ = ~_108_;
  assign _110_ = ~((_109_ & _096_) | _107_);
  assign _111_ = ~((_100_ & _093_) | _091_);
  assign _112_ = ~(_111_ | _203_);
  assign _113_ = ~((_110_ & _203_) | _112_);
  assign _114_ = _113_ ^ _106_;
  assign _002_[6] = _114_ & rst_n;
  assign _115_ = _110_ & _105_;
  assign _116_ = _103_ | angle_in[7];
  assign _117_ = ~(_111_ | _106_);
  assign _118_ = ~y_in[6];
  assign _119_ = ~((x_in[7] | _118_) & angle_in[7]);
  assign _120_ = ~((_119_ | _117_) & (_116_ | _115_));
  assign _121_ = x_in[7] ^ y_in[7];
  assign _122_ = _121_ ^ _120_;
  assign _002_[7] = _122_ & rst_n;
  assign _123_ = x_in[0] ^ y_in[2];
  assign _001_[0] = _123_ & rst_n;
  assign _124_ = ~(x_in[1] ^ y_in[3]);
  assign _125_ = ~(x_in[0] & y_in[2]);
  assign _126_ = x_in[0] | _075_;
  assign _127_ = angle_in[7] ? _125_ : _126_;
  assign _128_ = _127_ ^ _124_;
  assign _001_[1] = _128_ & rst_n;
  assign _129_ = _047_ & y_in[4];
  assign _130_ = x_in[2] & _098_;
  assign _131_ = _130_ | _129_;
  assign _132_ = ~_131_;
  assign _133_ = ~y_in[3];
  assign _134_ = x_in[1] | _133_;
  assign _135_ = x_in[1] & _133_;
  assign _136_ = ~((_126_ | _135_) & _134_);
  assign _137_ = ~_136_;
  assign _138_ = x_in[1] & y_in[3];
  assign _139_ = ~(_124_ | _125_);
  assign _140_ = _139_ | _138_;
  assign _141_ = ~_140_;
  assign _142_ = _203_ ? _137_ : _141_;
  assign _143_ = _142_ | _132_;
  assign _144_ = ~((_142_ & _132_) | _214_);
  assign _001_[2] = _144_ & _143_;
  assign _145_ = ~y_in[5];
  assign _146_ = x_in[3] | _145_;
  assign _147_ = x_in[3] & _145_;
  assign _148_ = ~_147_;
  assign _149_ = _148_ & _146_;
  assign _150_ = _047_ | y_in[4];
  assign _151_ = ~((_136_ & _150_) | _129_);
  assign _152_ = x_in[2] & y_in[4];
  assign _153_ = ~((_140_ & _131_) | _152_);
  assign _154_ = _203_ ? _151_ : _153_;
  assign _155_ = _154_ ^ _149_;
  assign _001_[3] = _155_ & rst_n;
  assign _156_ = ~x_in[4];
  assign _157_ = _156_ & y_in[6];
  assign _158_ = x_in[4] & _118_;
  assign _159_ = _158_ | _157_;
  assign _160_ = ~((_151_ & _146_) | _147_);
  assign _161_ = ~(x_in[3] | y_in[5]);
  assign _162_ = ~(x_in[3] & y_in[5]);
  assign _163_ = ~((_162_ & _153_) | _161_);
  assign _164_ = _203_ ? _160_ : _163_;
  assign _165_ = _164_ ^ _159_;
  assign _001_[4] = _165_ & rst_n;
  assign _166_ = ~y_in[7];
  assign _167_ = x_in[5] | _166_;
  assign _168_ = x_in[5] & _166_;
  assign _169_ = ~_168_;
  assign _170_ = _169_ & _167_;
  assign _171_ = ~_158_;
  assign _172_ = ~((_160_ | _157_) & _171_);
  assign _173_ = x_in[4] & y_in[6];
  assign _174_ = ~((_163_ & _159_) | _173_);
  assign _175_ = _203_ ? _172_ : _174_;
  assign _176_ = _175_ ^ _170_;
  assign _001_[5] = _176_ & rst_n;
  assign _177_ = ~(x_in[6] ^ y_in[7]);
  assign _178_ = ~((_172_ & _167_) | _168_);
  assign _179_ = ~(x_in[5] & y_in[7]);
  assign _180_ = ~((x_in[5] | y_in[7]) & angle_in[7]);
  assign _181_ = ~((_179_ & _174_) | _180_);
  assign _182_ = ~((_178_ & _203_) | _181_);
  assign _183_ = _182_ | _177_;
  assign _184_ = ~((_182_ & _177_) | _214_);
  assign _001_[6] = _184_ & _183_;
  assign _185_ = ~x_in[6];
  assign _186_ = ~((_185_ & y_in[7]) | _178_);
  assign _187_ = ~((_185_ | y_in[7]) & _203_);
  assign _188_ = ~_177_;
  assign _189_ = x_in[6] & y_in[7];
  assign _190_ = ~((_189_ & angle_in[7]) | (_181_ & _188_));
  assign _191_ = ~((_187_ | _186_) & _190_);
  assign _192_ = _191_ | _121_;
  assign _193_ = ~((_191_ & _121_) | _214_);
  assign _001_[7] = _193_ & _192_;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = { x_in[7], x_in[7], x_in[7:2] };
  assign shifted_y = { y_in[7], y_in[7], y_in[7:2] };
  assign sign = angle_in[7];
endmodule

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=3 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _186_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _186_ & rst_n;
  assign _187_ = ~(angle_in[1] ^ angle_adj[1]);
  assign _188_ = ~(angle_in[0] & angle_adj[0]);
  assign _189_ = ~angle_in[0];
  assign _190_ = ~(_189_ & angle_adj[0]);
  assign _191_ = angle_in[7] ? _188_ : _190_;
  assign _192_ = _191_ ^ _187_;
  assign _000_[1] = _192_ & rst_n;
  assign _193_ = angle_in[2] ^ angle_adj[2];
  assign _194_ = ~_193_;
  assign _195_ = ~angle_in[7];
  assign _196_ = ~angle_adj[1];
  assign _197_ = angle_in[1] | _196_;
  assign _198_ = angle_in[1] & _196_;
  assign _199_ = ~((_190_ | _198_) & _197_);
  assign _200_ = ~_199_;
  assign _201_ = ~(angle_in[1] & angle_adj[1]);
  assign _202_ = ~((_187_ | _188_) & _201_);
  assign _203_ = ~_202_;
  assign _204_ = _195_ ? _200_ : _203_;
  assign _205_ = _204_ | _194_;
  assign _206_ = ~rst_n;
  assign _207_ = ~((_204_ & _194_) | _206_);
  assign _000_[2] = _207_ & _205_;
  assign _208_ = ~angle_adj[3];
  assign _209_ = angle_in[3] | _208_;
  assign _210_ = angle_in[3] & _208_;
  assign _211_ = ~_210_;
  assign _212_ = _211_ & _209_;
  assign _213_ = ~angle_in[2];
  assign _214_ = _213_ & angle_adj[2];
  assign _215_ = _213_ | angle_adj[2];
  assign _216_ = ~((_199_ & _215_) | _214_);
  assign _217_ = angle_in[2] & angle_adj[2];
  assign _218_ = ~((_202_ & _193_) | _217_);
  assign _219_ = _195_ ? _216_ : _218_;
  assign _220_ = _219_ ^ _212_;
  assign _000_[3] = _220_ & rst_n;
  assign _221_ = ~angle_in[4];
  assign _222_ = _221_ & angle_adj[4];
  assign _223_ = ~_222_;
  assign _003_ = _221_ | angle_adj[4];
  assign _004_ = ~(_003_ & _223_);
  assign _005_ = ~_004_;
  assign _006_ = ~(angle_in[3] | angle_adj[3]);
  assign _007_ = ~(angle_in[3] & angle_adj[3]);
  assign _008_ = ~((_007_ & _218_) | _006_);
  assign _009_ = _008_ | _195_;
  assign _010_ = ~((_216_ & _209_) | _210_);
  assign _011_ = ~((_010_ | angle_in[7]) & _009_);
  assign _012_ = _011_ | _005_;
  assign _013_ = ~((_011_ & _005_) | _206_);
  assign _000_[4] = _013_ & _012_;
  assign _014_ = ~angle_adj[5];
  assign _015_ = angle_in[5] | _014_;
  assign _016_ = angle_in[5] & _014_;
  assign _017_ = ~_016_;
  assign _018_ = _017_ & _015_;
  assign _019_ = angle_in[4] & angle_adj[4];
  assign _020_ = ~((_008_ & _004_) | _019_);
  assign _021_ = ~((_010_ | _222_) & _003_);
  assign _022_ = angle_in[7] ? _020_ : _021_;
  assign _023_ = _022_ | _018_;
  assign _024_ = ~((_022_ & _018_) | _206_);
  assign _000_[5] = _024_ & _023_;
  assign _025_ = angle_in[6] ^ angle_adj[6];
  assign _026_ = ~((_021_ & _015_) | _016_);
  assign _027_ = _026_ & _025_;
  assign _028_ = ~((_026_ | _025_) & _195_);
  assign _029_ = ~(angle_in[5] & angle_adj[5]);
  assign _030_ = ~(angle_in[5] | angle_adj[5]);
  assign _031_ = ~((_030_ | _020_) & _029_);
  assign _032_ = _031_ & _025_;
  assign _033_ = ~((_031_ | _025_) & angle_in[7]);
  assign _034_ = ~((_033_ | _032_) & (_028_ | _027_));
  assign _000_[6] = _034_ & rst_n;
  assign _035_ = ~angle_adj[6];
  assign _036_ = angle_in[6] & _035_;
  assign _037_ = angle_in[6] & angle_adj[6];
  assign _038_ = ~((_037_ | _032_) & angle_in[7]);
  assign _039_ = ~((_028_ | _036_) & _038_);
  assign _040_ = angle_adj[7] ^ angle_in[7];
  assign _041_ = _040_ | _039_;
  assign _042_ = ~((_040_ & _039_) | _206_);
  assign _000_[7] = _042_ & _041_;
  assign _043_ = y_in[0] ^ x_in[3];
  assign _002_[0] = _043_ & rst_n;
  assign _044_ = ~(y_in[1] ^ x_in[4]);
  assign _045_ = y_in[0] & x_in[3];
  assign _046_ = ~_045_;
  assign _047_ = ~x_in[3];
  assign _048_ = y_in[0] | _047_;
  assign _049_ = _195_ ? _046_ : _048_;
  assign _050_ = _049_ | _044_;
  assign _051_ = ~((_049_ & _044_) | _206_);
  assign _002_[1] = _051_ & _050_;
  assign _052_ = y_in[2] | x_in[5];
  assign _053_ = ~(y_in[2] & x_in[5]);
  assign _054_ = _053_ & _052_;
  assign _055_ = ~_054_;
  assign _056_ = y_in[1] | x_in[4];
  assign _057_ = y_in[1] & x_in[4];
  assign _058_ = ~((_056_ & _045_) | _057_);
  assign _059_ = ~x_in[4];
  assign _060_ = y_in[1] & _059_;
  assign _061_ = ~((_048_ & _044_) | _060_);
  assign _062_ = ~_061_;
  assign _063_ = _195_ ? _058_ : _062_;
  assign _064_ = _063_ | _055_;
  assign _065_ = ~((_063_ & _055_) | _206_);
  assign _002_[2] = _065_ & _064_;
  assign _066_ = ~x_in[6];
  assign _067_ = _066_ & y_in[3];
  assign _068_ = ~_067_;
  assign _069_ = _066_ | y_in[3];
  assign _070_ = _069_ & _068_;
  assign _071_ = ~_052_;
  assign _072_ = _058_ | _071_;
  assign _073_ = ~(_072_ & _053_);
  assign _074_ = ~_073_;
  assign _075_ = ~x_in[5];
  assign _076_ = ~(y_in[2] & _075_);
  assign _077_ = ~((_061_ | _054_) & _076_);
  assign _078_ = _195_ ? _074_ : _077_;
  assign _079_ = _078_ ^ _070_;
  assign _002_[3] = _079_ & rst_n;
  assign _080_ = ~(x_in[7] | y_in[4]);
  assign _081_ = x_in[7] & y_in[4];
  assign _082_ = ~(_081_ | _080_);
  assign _083_ = x_in[6] | y_in[3];
  assign _084_ = x_in[6] & y_in[3];
  assign _085_ = ~((_084_ | _073_) & _083_);
  assign _086_ = ~_085_;
  assign _087_ = ~((_077_ & _069_) | _067_);
  assign _088_ = _195_ ? _086_ : _087_;
  assign _089_ = _088_ ^ _082_;
  assign _002_[4] = _089_ & rst_n;
  assign _090_ = ~x_in[7];
  assign _091_ = _090_ & y_in[5];
  assign _092_ = ~_091_;
  assign _093_ = _090_ | y_in[5];
  assign _094_ = _093_ & _092_;
  assign _095_ = ~_081_;
  assign _096_ = ~((_085_ | _080_) & _095_);
  assign _097_ = ~_096_;
  assign _098_ = ~y_in[4];
  assign _099_ = x_in[7] | _098_;
  assign _100_ = ~((_087_ | _082_) & _099_);
  assign _101_ = _195_ ? _097_ : _100_;
  assign _102_ = _101_ ^ _094_;
  assign _002_[5] = _102_ & rst_n;
  assign _103_ = ~(x_in[7] | y_in[6]);
  assign _104_ = ~_103_;
  assign _105_ = ~(x_in[7] & y_in[6]);
  assign _106_ = _105_ & _104_;
  assign _107_ = x_in[7] & y_in[5];
  assign _108_ = ~(x_in[7] | y_in[5]);
  assign _109_ = ~_108_;
  assign _110_ = ~((_109_ & _096_) | _107_);
  assign _111_ = ~((_100_ & _093_) | _091_);
  assign _112_ = ~(_111_ | _195_);
  assign _113_ = ~((_110_ & _195_) | _112_);
  assign _114_ = _113_ ^ _106_;
  assign _002_[6] = _114_ & rst_n;
  assign _115_ = _110_ & _105_;
  assign _116_ = _103_ | angle_in[7];
  assign _117_ = ~(_111_ | _106_);
  assign _118_ = ~y_in[6];
  assign _119_ = ~((x_in[7] | _118_) & angle_in[7]);
  assign _120_ = ~((_119_ | _117_) & (_116_ | _115_));
  assign _121_ = x_in[7] ^ y_in[7];
  assign _122_ = _121_ ^ _120_;
  assign _002_[7] = _122_ & rst_n;
  assign _123_ = x_in[0] ^ y_in[3];
  assign _001_[0] = _123_ & rst_n;
  assign _124_ = x_in[1] ^ y_in[4];
  assign _125_ = x_in[0] & y_in[3];
  assign _126_ = ~_125_;
  assign _127_ = ~y_in[3];
  assign _128_ = ~(x_in[0] | _127_);
  assign _129_ = ~_128_;
  assign _130_ = angle_in[7] ? _126_ : _129_;
  assign _131_ = ~(_130_ ^ _124_);
  assign _001_[1] = _131_ & rst_n;
  assign _132_ = ~(x_in[2] ^ y_in[5]);
  assign _133_ = ~x_in[1];
  assign _134_ = _133_ & y_in[4];
  assign _135_ = _133_ | y_in[4];
  assign _136_ = ~((_128_ & _135_) | _134_);
  assign _137_ = x_in[1] & y_in[4];
  assign _138_ = ~((_124_ & _125_) | _137_);
  assign _139_ = _195_ ? _136_ : _138_;
  assign _140_ = _139_ | _132_;
  assign _141_ = ~((_139_ & _132_) | _206_);
  assign _001_[2] = _141_ & _140_;
  assign _142_ = _047_ & y_in[6];
  assign _143_ = ~_142_;
  assign _144_ = _047_ | y_in[6];
  assign _145_ = _144_ & _143_;
  assign _146_ = ~y_in[5];
  assign _147_ = x_in[2] | _146_;
  assign _148_ = x_in[2] & _146_;
  assign _149_ = ~((_136_ | _148_) & _147_);
  assign _150_ = ~(x_in[2] & y_in[5]);
  assign _151_ = ~((_138_ | _132_) & _150_);
  assign _152_ = _195_ ? _149_ : _151_;
  assign _153_ = ~(_152_ ^ _145_);
  assign _001_[3] = _153_ & rst_n;
  assign _154_ = ~(x_in[4] ^ y_in[7]);
  assign _155_ = ~((_149_ | _142_) & _144_);
  assign _156_ = x_in[3] | y_in[6];
  assign _157_ = x_in[3] & y_in[6];
  assign _158_ = ~((_157_ | _151_) & _156_);
  assign _159_ = _195_ ? _155_ : _158_;
  assign _160_ = _159_ ^ _154_;
  assign _001_[4] = _160_ & rst_n;
  assign _161_ = ~(x_in[5] ^ y_in[7]);
  assign _162_ = ~_161_;
  assign _163_ = _155_ & _154_;
  assign _164_ = _158_ | _154_;
  assign _165_ = ~(x_in[4] & y_in[7]);
  assign _166_ = _165_ & _164_;
  assign _167_ = ~((_059_ | y_in[7]) & _195_);
  assign _168_ = ~((_167_ | _163_) & (_166_ | _195_));
  assign _169_ = _168_ | _162_;
  assign _170_ = ~((_168_ & _162_) | _206_);
  assign _001_[5] = _170_ & _169_;
  assign _171_ = x_in[6] ^ y_in[7];
  assign _172_ = ~((_075_ & _059_) | y_in[7]);
  assign _173_ = ~((_163_ & _161_) | _172_);
  assign _174_ = ~((x_in[5] | x_in[4]) & y_in[7]);
  assign _175_ = ~((_164_ | _161_) & _174_);
  assign _176_ = _195_ ? _173_ : _175_;
  assign _177_ = _176_ | _171_;
  assign _178_ = ~((_176_ & _171_) | _206_);
  assign _001_[6] = _178_ & _177_;
  assign _179_ = x_in[6] & y_in[7];
  assign _180_ = ~((_175_ & _171_) | _179_);
  assign _181_ = ~((_066_ & y_in[7]) | _173_);
  assign _182_ = ~((_066_ | y_in[7]) & _195_);
  assign _183_ = ~((_182_ | _181_) & (_180_ | _195_));
  assign _184_ = _183_ | _121_;
  assign _185_ = ~((_183_ & _121_) | _206_);
  assign _001_[7] = _185_ & _184_;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = { x_in[7], x_in[7], x_in[7], x_in[7:3] };
  assign shifted_y = { y_in[7], y_in[7], y_in[7], y_in[7:3] };
  assign sign = angle_in[7];
endmodule

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=4 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _185_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _185_ & rst_n;
  assign _186_ = angle_in[1] ^ angle_adj[1];
  assign _187_ = angle_in[0] & angle_adj[0];
  assign _188_ = ~_187_;
  assign _189_ = ~angle_in[0];
  assign _190_ = _189_ & angle_adj[0];
  assign _191_ = ~_190_;
  assign _192_ = angle_in[7] ? _188_ : _191_;
  assign _193_ = ~(_192_ ^ _186_);
  assign _000_[1] = _193_ & rst_n;
  assign _194_ = ~(angle_in[2] ^ angle_adj[2]);
  assign _195_ = ~angle_in[7];
  assign _196_ = ~angle_in[1];
  assign _197_ = _196_ & angle_adj[1];
  assign _198_ = _196_ | angle_adj[1];
  assign _199_ = ~((_190_ & _198_) | _197_);
  assign _200_ = angle_in[1] & angle_adj[1];
  assign _201_ = ~((_186_ & _187_) | _200_);
  assign _202_ = _195_ ? _199_ : _201_;
  assign _203_ = _202_ | _194_;
  assign _204_ = ~rst_n;
  assign _205_ = ~((_202_ & _194_) | _204_);
  assign _000_[2] = _205_ & _203_;
  assign _206_ = ~angle_in[3];
  assign _207_ = _206_ & angle_adj[3];
  assign _208_ = ~_207_;
  assign _209_ = _206_ | angle_adj[3];
  assign _210_ = _209_ & _208_;
  assign _211_ = ~angle_adj[2];
  assign _212_ = angle_in[2] | _211_;
  assign _213_ = angle_in[2] & _211_;
  assign _214_ = ~((_199_ | _213_) & _212_);
  assign _215_ = ~(angle_in[2] & angle_adj[2]);
  assign _216_ = ~((_201_ | _194_) & _215_);
  assign _217_ = _195_ ? _214_ : _216_;
  assign _218_ = ~(_217_ ^ _210_);
  assign _000_[3] = _218_ & rst_n;
  assign _219_ = ~angle_adj[4];
  assign _220_ = angle_in[4] | _219_;
  assign _221_ = ~(angle_in[4] & _219_);
  assign _222_ = _221_ & _220_;
  assign _003_ = angle_in[3] | angle_adj[3];
  assign _004_ = angle_in[3] & angle_adj[3];
  assign _005_ = ~((_004_ | _216_) & _003_);
  assign _006_ = ~((_214_ | _207_) & _209_);
  assign _007_ = angle_in[7] ? _005_ : _006_;
  assign _008_ = _007_ | _222_;
  assign _009_ = ~((_007_ & _222_) | _204_);
  assign _000_[4] = _009_ & _008_;
  assign _010_ = ~angle_in[5];
  assign _011_ = _010_ & angle_adj[5];
  assign _012_ = ~_011_;
  assign _013_ = _010_ | angle_adj[5];
  assign _014_ = ~(_013_ & _012_);
  assign _015_ = ~_221_;
  assign _016_ = ~((_006_ & _220_) | _015_);
  assign _017_ = ~(angle_in[4] & angle_adj[4]);
  assign _018_ = ~((_005_ | _222_) & _017_);
  assign _019_ = _195_ ? _016_ : _018_;
  assign _020_ = _019_ ^ _014_;
  assign _000_[5] = _020_ & rst_n;
  assign _021_ = ~(angle_in[6] ^ angle_adj[6]);
  assign _022_ = ~((_016_ | _011_) & _013_);
  assign _023_ = ~((_022_ & _021_) | angle_in[7]);
  assign _024_ = ~((_022_ | _021_) & _023_);
  assign _025_ = angle_in[5] & angle_adj[5];
  assign _026_ = angle_in[5] | angle_adj[5];
  assign _027_ = ~((_026_ & _018_) | _025_);
  assign _028_ = _027_ & _021_;
  assign _029_ = ~((_027_ | _021_) & angle_in[7]);
  assign _030_ = _029_ | _028_;
  assign _000_[6] = ~((_030_ & _024_) | _204_);
  assign _031_ = ~angle_adj[7];
  assign _032_ = ~angle_in[6];
  assign _033_ = _032_ | angle_adj[6];
  assign _034_ = ~((angle_in[6] & angle_adj[6]) | _029_);
  assign _035_ = ~((_023_ & _033_) | _034_);
  assign _036_ = _035_ | _031_;
  assign _037_ = ~((_035_ & _031_) | _204_);
  assign _000_[7] = _037_ & _036_;
  assign _038_ = x_in[0] ^ y_in[4];
  assign _001_[0] = _038_ & rst_n;
  assign _039_ = ~(x_in[1] ^ y_in[5]);
  assign _040_ = ~(x_in[0] & y_in[4]);
  assign _041_ = ~y_in[4];
  assign _042_ = x_in[0] | _041_;
  assign _043_ = angle_in[7] ? _040_ : _042_;
  assign _044_ = _043_ ^ _039_;
  assign _001_[1] = _044_ & rst_n;
  assign _045_ = x_in[2] ^ y_in[6];
  assign _046_ = ~_045_;
  assign _047_ = ~y_in[5];
  assign _048_ = x_in[1] | _047_;
  assign _049_ = x_in[1] & _047_;
  assign _050_ = ~((_042_ | _049_) & _048_);
  assign _051_ = ~_050_;
  assign _052_ = x_in[1] & y_in[5];
  assign _053_ = ~(_039_ | _040_);
  assign _054_ = _053_ | _052_;
  assign _055_ = ~_054_;
  assign _056_ = _195_ ? _051_ : _055_;
  assign _057_ = _056_ | _046_;
  assign _058_ = ~((_056_ & _046_) | _204_);
  assign _001_[2] = _058_ & _057_;
  assign _059_ = ~y_in[7];
  assign _060_ = x_in[3] | _059_;
  assign _061_ = x_in[3] & _059_;
  assign _062_ = ~_061_;
  assign _063_ = _062_ & _060_;
  assign _064_ = ~x_in[2];
  assign _065_ = _064_ & y_in[6];
  assign _066_ = _064_ | y_in[6];
  assign _067_ = ~((_050_ & _066_) | _065_);
  assign _068_ = x_in[2] & y_in[6];
  assign _069_ = ~((_054_ & _045_) | _068_);
  assign _070_ = _195_ ? _067_ : _069_;
  assign _071_ = _070_ ^ _063_;
  assign _001_[3] = _071_ & rst_n;
  assign _072_ = x_in[4] ^ y_in[7];
  assign _073_ = ~((_067_ & _060_) | _061_);
  assign _074_ = ~(x_in[3] | y_in[7]);
  assign _075_ = ~(x_in[3] & y_in[7]);
  assign _076_ = ~((_075_ & _069_) | _074_);
  assign _077_ = _195_ ? _073_ : _076_;
  assign _078_ = _077_ ^ _072_;
  assign _001_[4] = _078_ & rst_n;
  assign _079_ = ~(x_in[5] ^ y_in[7]);
  assign _080_ = ~_079_;
  assign _081_ = ~x_in[4];
  assign _082_ = _073_ | _072_;
  assign _083_ = ~((_081_ | y_in[7]) & _082_);
  assign _084_ = _076_ & _072_;
  assign _085_ = ~((_081_ | _059_) & angle_in[7]);
  assign _086_ = ~(_085_ | _084_);
  assign _087_ = ~((_083_ & _195_) | _086_);
  assign _088_ = _087_ | _080_;
  assign _089_ = ~((_087_ & _080_) | _204_);
  assign _001_[5] = _089_ & _088_;
  assign _090_ = ~(x_in[6] ^ y_in[7]);
  assign _091_ = ~_090_;
  assign _092_ = ~((x_in[5] | x_in[4]) & _059_);
  assign _093_ = ~((_082_ | _080_) & _092_);
  assign _094_ = ~((x_in[5] | x_in[4]) & y_in[7]);
  assign _095_ = ~_094_;
  assign _096_ = ~((_084_ & _080_) | _095_);
  assign _097_ = _096_ & angle_in[7];
  assign _098_ = ~((_093_ & _195_) | _097_);
  assign _099_ = _098_ | _091_;
  assign _100_ = ~((_098_ & _091_) | _204_);
  assign _001_[6] = _100_ & _099_;
  assign _101_ = ~(x_in[6] & y_in[7]);
  assign _102_ = ~((_096_ | _090_) & _101_);
  assign _103_ = x_in[6] | _059_;
  assign _104_ = ~x_in[6];
  assign _105_ = ~((_104_ | y_in[7]) & _195_);
  assign _106_ = ~((_093_ & _103_) | _105_);
  assign _107_ = ~((_102_ & angle_in[7]) | _106_);
  assign _108_ = ~(x_in[7] ^ y_in[7]);
  assign _109_ = _108_ ^ _107_;
  assign _001_[7] = _109_ & rst_n;
  assign _110_ = y_in[0] ^ x_in[4];
  assign _002_[0] = _110_ & rst_n;
  assign _111_ = ~(y_in[1] ^ x_in[5]);
  assign _112_ = y_in[0] & x_in[4];
  assign _113_ = ~_112_;
  assign _114_ = y_in[0] | _081_;
  assign _115_ = _195_ ? _113_ : _114_;
  assign _116_ = _115_ | _111_;
  assign _117_ = ~((_115_ & _111_) | _204_);
  assign _002_[1] = _117_ & _116_;
  assign _118_ = y_in[2] | x_in[6];
  assign _119_ = ~(y_in[2] & x_in[6]);
  assign _120_ = _119_ & _118_;
  assign _121_ = ~_120_;
  assign _122_ = y_in[1] | x_in[5];
  assign _123_ = y_in[1] & x_in[5];
  assign _124_ = ~((_122_ & _112_) | _123_);
  assign _125_ = ~y_in[1];
  assign _126_ = ~(_125_ | x_in[5]);
  assign _127_ = ~((_114_ & _111_) | _126_);
  assign _128_ = ~_127_;
  assign _129_ = _195_ ? _124_ : _128_;
  assign _130_ = _129_ | _121_;
  assign _131_ = ~((_129_ & _121_) | _204_);
  assign _002_[2] = _131_ & _130_;
  assign _132_ = ~x_in[7];
  assign _133_ = y_in[3] & _132_;
  assign _134_ = ~_133_;
  assign _135_ = y_in[3] | _132_;
  assign _136_ = _135_ & _134_;
  assign _137_ = ~_118_;
  assign _138_ = _124_ | _137_;
  assign _139_ = ~(_138_ & _119_);
  assign _140_ = ~_139_;
  assign _141_ = ~(y_in[2] & _104_);
  assign _142_ = ~((_127_ | _120_) & _141_);
  assign _143_ = _195_ ? _140_ : _142_;
  assign _144_ = _143_ ^ _136_;
  assign _002_[3] = _144_ & rst_n;
  assign _145_ = ~(x_in[7] | y_in[4]);
  assign _146_ = ~_145_;
  assign _147_ = ~(x_in[7] & y_in[4]);
  assign _148_ = _147_ & _146_;
  assign _149_ = y_in[3] | x_in[7];
  assign _150_ = y_in[3] & x_in[7];
  assign _151_ = ~((_150_ | _139_) & _149_);
  assign _152_ = ~_151_;
  assign _153_ = ~((_142_ & _135_) | _133_);
  assign _154_ = _195_ ? _152_ : _153_;
  assign _155_ = _154_ ^ _148_;
  assign _002_[4] = _155_ & rst_n;
  assign _156_ = _132_ & y_in[5];
  assign _157_ = ~_156_;
  assign _158_ = _132_ | y_in[5];
  assign _159_ = _158_ & _157_;
  assign _160_ = x_in[7] | _041_;
  assign _161_ = ~((_153_ | _148_) & _160_);
  assign _162_ = ~((_151_ | _145_) & _147_);
  assign _163_ = ~_162_;
  assign _164_ = angle_in[7] ? _161_ : _163_;
  assign _165_ = _164_ ^ _159_;
  assign _002_[5] = _165_ & rst_n;
  assign _166_ = ~(x_in[7] | y_in[6]);
  assign _167_ = ~_166_;
  assign _168_ = ~(x_in[7] & y_in[6]);
  assign _169_ = _168_ & _167_;
  assign _170_ = x_in[7] & y_in[5];
  assign _171_ = ~(x_in[7] | y_in[5]);
  assign _172_ = ~_171_;
  assign _173_ = ~((_172_ & _162_) | _170_);
  assign _174_ = ~((_161_ & _158_) | _156_);
  assign _175_ = ~(_174_ | _195_);
  assign _176_ = ~((_173_ & _195_) | _175_);
  assign _177_ = _176_ ^ _169_;
  assign _002_[6] = _177_ & rst_n;
  assign _178_ = _173_ & _168_;
  assign _179_ = _166_ | angle_in[7];
  assign _180_ = ~(_174_ | _169_);
  assign _181_ = ~y_in[6];
  assign _182_ = ~((x_in[7] | _181_) & angle_in[7]);
  assign _183_ = ~((_182_ | _180_) & (_179_ | _178_));
  assign _184_ = ~(_183_ ^ _108_);
  assign _002_[7] = _184_ & rst_n;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = { x_in[7], x_in[7], x_in[7], x_in[7], x_in[7:4] };
  assign shifted_y = { y_in[7], y_in[7], y_in[7], y_in[7], y_in[7:4] };
  assign sign = angle_in[7];
endmodule

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=5 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _180_ = y_in[0] ^ x_in[5];
  assign _002_[0] = _180_ & rst_n;
  assign _181_ = y_in[1] | x_in[6];
  assign _182_ = ~(y_in[1] & x_in[6]);
  assign _183_ = _182_ & _181_;
  assign _184_ = ~_183_;
  assign _185_ = ~angle_in[7];
  assign _186_ = y_in[0] & x_in[5];
  assign _187_ = ~_186_;
  assign _188_ = ~x_in[5];
  assign _189_ = ~(y_in[0] | _188_);
  assign _190_ = ~_189_;
  assign _191_ = _185_ ? _187_ : _190_;
  assign _192_ = _191_ | _184_;
  assign _193_ = ~rst_n;
  assign _194_ = ~((_191_ & _184_) | _193_);
  assign _002_[1] = _194_ & _192_;
  assign _195_ = ~(y_in[2] ^ x_in[7]);
  assign _196_ = y_in[1] & x_in[6];
  assign _197_ = ~((_181_ & _186_) | _196_);
  assign _198_ = ~x_in[6];
  assign _199_ = ~(y_in[1] & _198_);
  assign _200_ = ~((_189_ | _183_) & _199_);
  assign _201_ = _185_ ? _197_ : _200_;
  assign _202_ = _201_ | _195_;
  assign _203_ = ~((_201_ & _195_) | _193_);
  assign _002_[2] = _203_ & _202_;
  assign _204_ = y_in[3] ^ x_in[7];
  assign _205_ = ~x_in[7];
  assign _206_ = ~y_in[2];
  assign _207_ = _197_ | _195_;
  assign _208_ = ~((_206_ | _205_) & _207_);
  assign _209_ = _200_ & _195_;
  assign _210_ = ~((y_in[2] & _205_) | _209_);
  assign _211_ = _185_ ? _208_ : _210_;
  assign _212_ = _211_ | _204_;
  assign _213_ = ~((_211_ & _204_) | _193_);
  assign _002_[3] = _213_ & _212_;
  assign _214_ = ~(y_in[4] | x_in[7]);
  assign _215_ = y_in[4] & x_in[7];
  assign _216_ = ~(_215_ | _214_);
  assign _217_ = ~_216_;
  assign _003_ = ~_204_;
  assign _004_ = _207_ | _003_;
  assign _005_ = ~((y_in[3] | y_in[2]) & x_in[7]);
  assign _006_ = ~(_005_ & _004_);
  assign _007_ = ~_006_;
  assign _008_ = ~((y_in[3] | y_in[2]) & _205_);
  assign _009_ = ~_008_;
  assign _010_ = ~((_209_ & _003_) | _009_);
  assign _011_ = ~_010_;
  assign _012_ = _185_ ? _007_ : _011_;
  assign _013_ = _012_ | _217_;
  assign _014_ = ~((_012_ & _217_) | _193_);
  assign _002_[4] = _014_ & _013_;
  assign _015_ = ~y_in[5];
  assign _016_ = x_in[7] & _015_;
  assign _017_ = _205_ & y_in[5];
  assign _018_ = _017_ | _016_;
  assign _019_ = ~_214_;
  assign _020_ = ~((_006_ | _215_) & _019_);
  assign _021_ = ~_020_;
  assign _022_ = y_in[4] & _205_;
  assign _023_ = ~_022_;
  assign _024_ = ~((_010_ | _216_) & _023_);
  assign _025_ = ~_024_;
  assign _026_ = _185_ ? _021_ : _025_;
  assign _027_ = _026_ | _018_;
  assign _028_ = ~((_026_ & _018_) | _193_);
  assign _002_[5] = _028_ & _027_;
  assign _029_ = x_in[7] ^ y_in[6];
  assign _030_ = x_in[7] & y_in[5];
  assign _031_ = ~_030_;
  assign _032_ = ~(x_in[7] | y_in[5]);
  assign _033_ = ~((_032_ | _020_) & _031_);
  assign _034_ = ~_016_;
  assign _035_ = ~((_024_ & _034_) | _017_);
  assign _036_ = _185_ ? _033_ : _035_;
  assign _037_ = _036_ ^ _029_;
  assign _002_[6] = _037_ & rst_n;
  assign _038_ = ~((x_in[7] & y_in[6]) | _033_);
  assign _039_ = ~((x_in[7] | y_in[6]) & _185_);
  assign _040_ = ~((_205_ & y_in[6]) | _185_);
  assign _041_ = ~((_035_ | _029_) & _040_);
  assign _042_ = ~((_039_ | _038_) & _041_);
  assign _043_ = x_in[7] ^ y_in[7];
  assign _044_ = _043_ ^ _042_;
  assign _002_[7] = _044_ & rst_n;
  assign _045_ = x_in[0] ^ y_in[5];
  assign _001_[0] = _045_ & rst_n;
  assign _046_ = x_in[1] ^ y_in[6];
  assign _047_ = x_in[0] & y_in[5];
  assign _048_ = ~(x_in[0] | _015_);
  assign _049_ = angle_in[7] ? _047_ : _048_;
  assign _050_ = _049_ ^ _046_;
  assign _001_[1] = _050_ & rst_n;
  assign _051_ = ~(x_in[2] ^ y_in[7]);
  assign _052_ = ~x_in[1];
  assign _053_ = _052_ & y_in[6];
  assign _054_ = _052_ | y_in[6];
  assign _055_ = ~((_048_ & _054_) | _053_);
  assign _056_ = x_in[1] & y_in[6];
  assign _057_ = ~((_046_ & _047_) | _056_);
  assign _058_ = _185_ ? _055_ : _057_;
  assign _059_ = _058_ | _051_;
  assign _060_ = ~((_058_ & _051_) | _193_);
  assign _001_[2] = _060_ & _059_;
  assign _061_ = ~(x_in[3] ^ y_in[7]);
  assign _062_ = ~_061_;
  assign _063_ = ~(x_in[2] & y_in[7]);
  assign _064_ = _057_ | _051_;
  assign _065_ = _064_ & _063_;
  assign _066_ = _055_ & _051_;
  assign _067_ = ~x_in[2];
  assign _068_ = ~((_067_ | y_in[7]) & _185_);
  assign _069_ = ~((_068_ | _066_) & (_065_ | _185_));
  assign _070_ = _069_ | _062_;
  assign _071_ = ~((_069_ & _062_) | _193_);
  assign _001_[3] = _071_ & _070_;
  assign _072_ = x_in[4] ^ y_in[7];
  assign _073_ = ~x_in[3];
  assign _074_ = ~((_073_ & _067_) | y_in[7]);
  assign _075_ = ~((_066_ & _061_) | _074_);
  assign _076_ = ~((x_in[3] | x_in[2]) & y_in[7]);
  assign _077_ = ~((_064_ | _061_) & _076_);
  assign _078_ = _185_ ? _075_ : _077_;
  assign _079_ = _078_ | _072_;
  assign _080_ = ~((_078_ & _072_) | _193_);
  assign _001_[4] = _080_ & _079_;
  assign _081_ = ~(x_in[5] ^ y_in[7]);
  assign _082_ = ~_081_;
  assign _083_ = ~x_in[4];
  assign _084_ = _075_ | _072_;
  assign _085_ = ~((_083_ | y_in[7]) & _084_);
  assign _086_ = _077_ & _072_;
  assign _087_ = ~y_in[7];
  assign _088_ = ~((_083_ | _087_) & angle_in[7]);
  assign _089_ = ~(_088_ | _086_);
  assign _090_ = ~((_085_ & _185_) | _089_);
  assign _091_ = _090_ ^ _082_;
  assign _001_[5] = _091_ & rst_n;
  assign _092_ = ~(x_in[6] ^ y_in[7]);
  assign _093_ = _188_ & y_in[7];
  assign _094_ = ~(x_in[4] | x_in[5]);
  assign _095_ = ~((_094_ | y_in[7]) & (_084_ | _093_));
  assign _096_ = ~(_094_ | _087_);
  assign _097_ = ~((_086_ & _082_) | _096_);
  assign _098_ = _185_ ? _095_ : _097_;
  assign _099_ = ~((_098_ | _092_) & rst_n);
  assign _001_[6] = ~((_098_ & _092_) | _099_);
  assign _100_ = ~(x_in[6] & y_in[7]);
  assign _101_ = ~((_097_ | _092_) & _100_);
  assign _102_ = x_in[6] | _087_;
  assign _103_ = ~((_198_ | y_in[7]) & _185_);
  assign _104_ = ~((_095_ & _102_) | _103_);
  assign _105_ = ~((_101_ & angle_in[7]) | _104_);
  assign _106_ = ~(_105_ ^ _043_);
  assign _001_[7] = _106_ & rst_n;
  assign _107_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _107_ & rst_n;
  assign _108_ = ~(angle_in[1] ^ angle_adj[1]);
  assign _109_ = ~(angle_in[0] & angle_adj[0]);
  assign _110_ = ~angle_in[0];
  assign _111_ = ~(_110_ & angle_adj[0]);
  assign _112_ = angle_in[7] ? _109_ : _111_;
  assign _113_ = _112_ ^ _108_;
  assign _000_[1] = _113_ & rst_n;
  assign _114_ = angle_in[2] ^ angle_adj[2];
  assign _115_ = ~_114_;
  assign _116_ = ~angle_adj[1];
  assign _117_ = angle_in[1] | _116_;
  assign _118_ = angle_in[1] & _116_;
  assign _119_ = ~((_111_ | _118_) & _117_);
  assign _120_ = ~_119_;
  assign _121_ = ~(angle_in[1] & angle_adj[1]);
  assign _122_ = ~((_108_ | _109_) & _121_);
  assign _123_ = ~_122_;
  assign _124_ = _185_ ? _120_ : _123_;
  assign _125_ = _124_ | _115_;
  assign _126_ = ~((_124_ & _115_) | _193_);
  assign _000_[2] = _126_ & _125_;
  assign _127_ = ~angle_adj[3];
  assign _128_ = angle_in[3] | _127_;
  assign _129_ = angle_in[3] & _127_;
  assign _130_ = ~_129_;
  assign _131_ = _130_ & _128_;
  assign _132_ = ~angle_in[2];
  assign _133_ = _132_ & angle_adj[2];
  assign _134_ = _132_ | angle_adj[2];
  assign _135_ = ~((_119_ & _134_) | _133_);
  assign _136_ = angle_in[2] & angle_adj[2];
  assign _137_ = ~((_122_ & _114_) | _136_);
  assign _138_ = _185_ ? _135_ : _137_;
  assign _139_ = _138_ ^ _131_;
  assign _000_[3] = _139_ & rst_n;
  assign _140_ = ~angle_in[4];
  assign _141_ = _140_ & angle_adj[4];
  assign _142_ = ~_141_;
  assign _143_ = _140_ | angle_adj[4];
  assign _144_ = ~(_143_ & _142_);
  assign _145_ = ~((_135_ & _128_) | _129_);
  assign _146_ = ~(angle_in[3] | angle_adj[3]);
  assign _147_ = ~(angle_in[3] & angle_adj[3]);
  assign _148_ = ~((_147_ & _137_) | _146_);
  assign _149_ = _185_ ? _145_ : _148_;
  assign _150_ = _149_ ^ _144_;
  assign _000_[4] = _150_ & rst_n;
  assign _151_ = ~angle_adj[5];
  assign _152_ = angle_in[5] | _151_;
  assign _153_ = angle_in[5] & _151_;
  assign _154_ = ~_153_;
  assign _155_ = _154_ & _152_;
  assign _156_ = angle_in[4] & angle_adj[4];
  assign _157_ = ~((_148_ & _144_) | _156_);
  assign _158_ = ~((_145_ | _141_) & _143_);
  assign _159_ = angle_in[7] ? _157_ : _158_;
  assign _160_ = _159_ | _155_;
  assign _161_ = ~((_159_ & _155_) | _193_);
  assign _000_[5] = _161_ & _160_;
  assign _162_ = angle_in[6] ^ angle_adj[6];
  assign _163_ = ~((_158_ & _152_) | _153_);
  assign _164_ = _163_ & _162_;
  assign _165_ = ~((_163_ | _162_) & _185_);
  assign _166_ = ~(angle_in[5] & angle_adj[5]);
  assign _167_ = ~(angle_in[5] | angle_adj[5]);
  assign _168_ = ~((_167_ | _157_) & _166_);
  assign _169_ = _168_ & _162_;
  assign _170_ = ~((_168_ | _162_) & angle_in[7]);
  assign _171_ = ~((_170_ | _169_) & (_165_ | _164_));
  assign _000_[6] = _171_ & rst_n;
  assign _172_ = ~angle_adj[6];
  assign _173_ = angle_in[6] & _172_;
  assign _174_ = angle_in[6] & angle_adj[6];
  assign _175_ = ~((_174_ | _169_) & angle_in[7]);
  assign _176_ = ~((_165_ | _173_) & _175_);
  assign _177_ = angle_adj[7] ^ angle_in[7];
  assign _178_ = _177_ | _176_;
  assign _179_ = ~((_177_ & _176_) | _193_);
  assign _000_[7] = _179_ & _178_;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = { x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7:5] };
  assign shifted_y = { y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7:5] };
  assign sign = angle_in[7];
endmodule

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=6 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _190_ = x_in[0] ^ y_in[6];
  assign _001_[0] = _190_ & rst_n;
  assign _191_ = x_in[1] ^ y_in[7];
  assign _192_ = x_in[0] & y_in[6];
  assign _193_ = ~y_in[6];
  assign _194_ = ~(x_in[0] | _193_);
  assign _195_ = angle_in[7] ? _192_ : _194_;
  assign _196_ = _195_ ^ _191_;
  assign _001_[1] = _196_ & rst_n;
  assign _197_ = ~(x_in[2] ^ y_in[7]);
  assign _198_ = ~angle_in[7];
  assign _199_ = ~x_in[1];
  assign _200_ = _199_ & y_in[7];
  assign _201_ = _199_ | y_in[7];
  assign _202_ = ~((_194_ & _201_) | _200_);
  assign _203_ = x_in[1] & y_in[7];
  assign _204_ = ~((_191_ & _192_) | _203_);
  assign _205_ = _198_ ? _202_ : _204_;
  assign _206_ = _205_ | _197_;
  assign _207_ = ~rst_n;
  assign _208_ = ~((_205_ & _197_) | _207_);
  assign _001_[2] = _208_ & _206_;
  assign _209_ = ~(x_in[3] ^ y_in[7]);
  assign _210_ = ~_209_;
  assign _211_ = ~(x_in[2] & y_in[7]);
  assign _212_ = _204_ | _197_;
  assign _213_ = _212_ & _211_;
  assign _214_ = _202_ & _197_;
  assign _215_ = ~x_in[2];
  assign _216_ = ~((_215_ | y_in[7]) & _198_);
  assign _217_ = ~((_216_ | _214_) & (_213_ | _198_));
  assign _218_ = _217_ | _210_;
  assign _219_ = ~((_217_ & _210_) | _207_);
  assign _001_[3] = _219_ & _218_;
  assign _220_ = x_in[4] ^ y_in[7];
  assign _221_ = ~y_in[7];
  assign _222_ = x_in[3] | _221_;
  assign _223_ = ~x_in[3];
  assign _224_ = ~((_223_ & _215_) | y_in[7]);
  assign _225_ = ~((_214_ & _222_) | _224_);
  assign _226_ = ~((x_in[3] | x_in[2]) & y_in[7]);
  assign _227_ = ~((_212_ | _209_) & _226_);
  assign _003_ = _198_ ? _225_ : _227_;
  assign _004_ = _003_ | _220_;
  assign _005_ = ~((_003_ & _220_) | _207_);
  assign _001_[4] = _005_ & _004_;
  assign _006_ = x_in[5] ^ y_in[7];
  assign _007_ = ~(_225_ | _220_);
  assign _008_ = _227_ & _220_;
  assign _009_ = ~((x_in[4] & y_in[7]) | _008_);
  assign _010_ = ~x_in[4];
  assign _011_ = ~((_010_ | y_in[7]) & _198_);
  assign _012_ = ~((_011_ | _007_) & (_009_ | _198_));
  assign _013_ = _012_ | _006_;
  assign _014_ = ~((_012_ & _006_) | _207_);
  assign _001_[5] = _014_ & _013_;
  assign _015_ = ~(x_in[5] | _221_);
  assign _016_ = _225_ | _220_;
  assign _017_ = x_in[5] | x_in[4];
  assign _018_ = ~(_017_ & _221_);
  assign _019_ = ~((_016_ | _015_) & _018_);
  assign _020_ = ~(x_in[6] ^ y_in[7]);
  assign _021_ = ~(_020_ | _019_);
  assign _022_ = _020_ & _019_;
  assign _023_ = _022_ | angle_in[7];
  assign _024_ = ~((_017_ & y_in[7]) | (_008_ & _006_));
  assign _025_ = ~(_024_ | _020_);
  assign _026_ = _024_ & _020_;
  assign _027_ = _026_ | _198_;
  assign _028_ = ~((_027_ | _025_) & (_023_ | _021_));
  assign _001_[6] = _028_ & rst_n;
  assign _029_ = ~x_in[6];
  assign _030_ = _029_ | y_in[7];
  assign _031_ = ~((_020_ & _019_) | angle_in[7]);
  assign _032_ = x_in[6] & y_in[7];
  assign _033_ = _032_ | _025_;
  assign _034_ = ~((_033_ & angle_in[7]) | (_031_ & _030_));
  assign _035_ = ~(x_in[7] ^ y_in[7]);
  assign _036_ = _035_ ^ _034_;
  assign _001_[7] = _036_ & rst_n;
  assign _037_ = y_in[0] ^ x_in[6];
  assign _002_[0] = _037_ & rst_n;
  assign _038_ = y_in[1] | x_in[7];
  assign _039_ = ~(y_in[1] & x_in[7]);
  assign _040_ = _039_ & _038_;
  assign _041_ = ~_040_;
  assign _042_ = ~(y_in[0] & x_in[6]);
  assign _043_ = ~(y_in[0] | _029_);
  assign _044_ = ~_043_;
  assign _045_ = _198_ ? _042_ : _044_;
  assign _046_ = _045_ | _041_;
  assign _047_ = ~((_045_ & _041_) | _207_);
  assign _002_[1] = _047_ & _046_;
  assign _048_ = y_in[2] ^ x_in[7];
  assign _049_ = ~_048_;
  assign _050_ = ~(y_in[1] | x_in[7]);
  assign _051_ = ~((_050_ | _042_) & _039_);
  assign _052_ = ~_051_;
  assign _053_ = ~x_in[7];
  assign _054_ = ~(y_in[1] & _053_);
  assign _055_ = ~((_043_ | _040_) & _054_);
  assign _056_ = _198_ ? _052_ : _055_;
  assign _057_ = _056_ | _049_;
  assign _058_ = ~((_056_ & _049_) | _207_);
  assign _002_[2] = _058_ & _057_;
  assign _059_ = y_in[3] ^ x_in[7];
  assign _060_ = ~_059_;
  assign _061_ = _051_ & _048_;
  assign _062_ = ~((y_in[2] & x_in[7]) | _061_);
  assign _063_ = y_in[2] & _053_;
  assign _064_ = ~((_055_ & _049_) | _063_);
  assign _065_ = ~_064_;
  assign _066_ = _198_ ? _062_ : _065_;
  assign _067_ = _066_ | _060_;
  assign _068_ = ~((_066_ & _060_) | _207_);
  assign _002_[3] = _068_ & _067_;
  assign _069_ = y_in[4] | x_in[7];
  assign _070_ = y_in[4] & x_in[7];
  assign _071_ = ~_070_;
  assign _072_ = _071_ & _069_;
  assign _073_ = ~(_061_ & _059_);
  assign _074_ = ~((y_in[3] | y_in[2]) & x_in[7]);
  assign _075_ = ~(_074_ & _073_);
  assign _076_ = ~y_in[3];
  assign _077_ = _076_ & x_in[7];
  assign _078_ = _076_ | x_in[7];
  assign _079_ = ~((_078_ & _064_) | _077_);
  assign _080_ = ~_079_;
  assign _081_ = _198_ ? _075_ : _080_;
  assign _082_ = _081_ ^ _072_;
  assign _002_[4] = _082_ & rst_n;
  assign _083_ = ~(y_in[5] | x_in[7]);
  assign _084_ = y_in[5] & x_in[7];
  assign _085_ = _084_ | _083_;
  assign _086_ = ~_085_;
  assign _087_ = ~((_075_ | _070_) & _069_);
  assign _088_ = ~_072_;
  assign _089_ = _079_ & _088_;
  assign _090_ = ~y_in[4];
  assign _091_ = ~((_090_ | x_in[7]) & angle_in[7]);
  assign _092_ = ~((_091_ | _089_) & (_087_ | angle_in[7]));
  assign _093_ = _092_ | _086_;
  assign _094_ = ~((_092_ & _086_) | _207_);
  assign _002_[5] = _094_ & _093_;
  assign _095_ = x_in[7] ^ y_in[6];
  assign _096_ = ~_095_;
  assign _097_ = ~_084_;
  assign _098_ = ~((_087_ & _097_) | _083_);
  assign _099_ = ~y_in[5];
  assign _100_ = ~((_099_ & _090_) | x_in[7]);
  assign _101_ = ~((_089_ & _085_) | _100_);
  assign _102_ = _101_ & angle_in[7];
  assign _103_ = ~((_098_ & _198_) | _102_);
  assign _104_ = _103_ | _096_;
  assign _105_ = ~((_103_ & _096_) | _207_);
  assign _002_[6] = _105_ & _104_;
  assign _106_ = x_in[7] | _193_;
  assign _107_ = ~((_101_ | _095_) & _106_);
  assign _108_ = x_in[7] | y_in[6];
  assign _109_ = x_in[7] & y_in[6];
  assign _110_ = ~((_098_ & _108_) | _109_);
  assign _111_ = angle_in[7] ? _107_ : _110_;
  assign _112_ = _111_ | _035_;
  assign _113_ = ~((_111_ & _035_) | _207_);
  assign _002_[7] = _113_ & _112_;
  assign _114_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _114_ & rst_n;
  assign _115_ = ~(angle_in[1] ^ angle_adj[1]);
  assign _116_ = ~(angle_in[0] & angle_adj[0]);
  assign _117_ = ~angle_in[0];
  assign _118_ = ~(_117_ & angle_adj[0]);
  assign _119_ = angle_in[7] ? _116_ : _118_;
  assign _120_ = _119_ ^ _115_;
  assign _000_[1] = _120_ & rst_n;
  assign _121_ = angle_in[2] ^ angle_adj[2];
  assign _122_ = ~_121_;
  assign _123_ = ~angle_adj[1];
  assign _124_ = angle_in[1] | _123_;
  assign _125_ = angle_in[1] & _123_;
  assign _126_ = ~((_118_ | _125_) & _124_);
  assign _127_ = ~_126_;
  assign _128_ = ~(angle_in[1] & angle_adj[1]);
  assign _129_ = ~((_115_ | _116_) & _128_);
  assign _130_ = ~_129_;
  assign _131_ = _198_ ? _127_ : _130_;
  assign _132_ = _131_ | _122_;
  assign _133_ = ~((_131_ & _122_) | _207_);
  assign _000_[2] = _133_ & _132_;
  assign _134_ = ~angle_adj[3];
  assign _135_ = angle_in[3] | _134_;
  assign _136_ = angle_in[3] & _134_;
  assign _137_ = ~_136_;
  assign _138_ = _137_ & _135_;
  assign _139_ = ~angle_in[2];
  assign _140_ = _139_ & angle_adj[2];
  assign _141_ = _139_ | angle_adj[2];
  assign _142_ = ~((_126_ & _141_) | _140_);
  assign _143_ = angle_in[2] & angle_adj[2];
  assign _144_ = ~((_129_ & _121_) | _143_);
  assign _145_ = _198_ ? _142_ : _144_;
  assign _146_ = _145_ ^ _138_;
  assign _000_[3] = _146_ & rst_n;
  assign _147_ = ~angle_in[4];
  assign _148_ = _147_ & angle_adj[4];
  assign _149_ = ~(_147_ | angle_adj[4]);
  assign _150_ = _149_ | _148_;
  assign _151_ = ~_150_;
  assign _152_ = ~(angle_in[3] | angle_adj[3]);
  assign _153_ = ~(angle_in[3] & angle_adj[3]);
  assign _154_ = ~((_153_ & _144_) | _152_);
  assign _155_ = ~_154_;
  assign _156_ = ~((_142_ & _135_) | _136_);
  assign _157_ = ~_156_;
  assign _158_ = angle_in[7] ? _155_ : _157_;
  assign _159_ = _158_ | _151_;
  assign _160_ = ~((_158_ & _151_) | _207_);
  assign _000_[4] = _160_ & _159_;
  assign _161_ = ~angle_adj[5];
  assign _162_ = angle_in[5] | _161_;
  assign _163_ = angle_in[5] & _161_;
  assign _164_ = ~_163_;
  assign _165_ = _164_ & _162_;
  assign _166_ = ~_149_;
  assign _167_ = ~((_156_ | _148_) & _166_);
  assign _168_ = angle_in[4] & angle_adj[4];
  assign _169_ = ~((_154_ & _150_) | _168_);
  assign _170_ = _198_ ? _167_ : _169_;
  assign _171_ = _170_ ^ _165_;
  assign _000_[5] = _171_ & rst_n;
  assign _172_ = angle_in[6] ^ angle_adj[6];
  assign _173_ = ~((_167_ & _162_) | _163_);
  assign _174_ = _173_ & _172_;
  assign _175_ = ~((_173_ | _172_) & _198_);
  assign _176_ = ~(angle_in[5] & angle_adj[5]);
  assign _177_ = ~(angle_in[5] | angle_adj[5]);
  assign _178_ = ~((_177_ | _169_) & _176_);
  assign _179_ = _178_ & _172_;
  assign _180_ = ~((_178_ | _172_) & angle_in[7]);
  assign _181_ = ~((_180_ | _179_) & (_175_ | _174_));
  assign _000_[6] = _181_ & rst_n;
  assign _182_ = ~angle_adj[6];
  assign _183_ = angle_in[6] & _182_;
  assign _184_ = angle_in[6] & angle_adj[6];
  assign _185_ = ~((_184_ | _179_) & angle_in[7]);
  assign _186_ = ~((_175_ | _183_) & _185_);
  assign _187_ = angle_adj[7] ^ angle_in[7];
  assign _188_ = _187_ | _186_;
  assign _189_ = ~((_187_ & _186_) | _207_);
  assign _000_[7] = _189_ & _188_;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = { x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7:6] };
  assign shifted_y = { y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7:6] };
  assign sign = angle_in[7];
endmodule

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=7 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _154_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _154_ & rst_n;
  assign _155_ = angle_in[1] ^ angle_adj[1];
  assign _156_ = angle_in[0] & angle_adj[0];
  assign _157_ = ~_156_;
  assign _158_ = ~angle_in[0];
  assign _159_ = _158_ & angle_adj[0];
  assign _160_ = ~_159_;
  assign _161_ = angle_in[7] ? _157_ : _160_;
  assign _162_ = ~(_161_ ^ _155_);
  assign _000_[1] = _162_ & rst_n;
  assign _163_ = ~(angle_in[2] ^ angle_adj[2]);
  assign _164_ = ~angle_in[7];
  assign _165_ = ~angle_in[1];
  assign _166_ = _165_ & angle_adj[1];
  assign _167_ = _165_ | angle_adj[1];
  assign _168_ = ~((_159_ & _167_) | _166_);
  assign _169_ = angle_in[1] & angle_adj[1];
  assign _170_ = ~((_155_ & _156_) | _169_);
  assign _171_ = _164_ ? _168_ : _170_;
  assign _172_ = _171_ | _163_;
  assign _173_ = ~rst_n;
  assign _174_ = ~((_171_ & _163_) | _173_);
  assign _000_[2] = _174_ & _172_;
  assign _175_ = ~angle_in[3];
  assign _176_ = _175_ & angle_adj[3];
  assign _177_ = ~_176_;
  assign _178_ = _175_ | angle_adj[3];
  assign _179_ = _178_ & _177_;
  assign _180_ = ~angle_adj[2];
  assign _181_ = angle_in[2] | _180_;
  assign _182_ = angle_in[2] & _180_;
  assign _183_ = ~((_168_ | _182_) & _181_);
  assign _184_ = ~(angle_in[2] & angle_adj[2]);
  assign _185_ = ~((_170_ | _163_) & _184_);
  assign _186_ = _164_ ? _183_ : _185_;
  assign _187_ = ~(_186_ ^ _179_);
  assign _000_[3] = _187_ & rst_n;
  assign _188_ = ~angle_adj[4];
  assign _189_ = angle_in[4] | _188_;
  assign _190_ = ~(angle_in[4] & _188_);
  assign _191_ = _190_ & _189_;
  assign _003_ = angle_in[3] | angle_adj[3];
  assign _004_ = angle_in[3] & angle_adj[3];
  assign _005_ = ~((_004_ | _185_) & _003_);
  assign _006_ = ~((_183_ | _176_) & _178_);
  assign _007_ = angle_in[7] ? _005_ : _006_;
  assign _008_ = _007_ | _191_;
  assign _009_ = ~((_007_ & _191_) | _173_);
  assign _000_[4] = _009_ & _008_;
  assign _010_ = ~angle_in[5];
  assign _011_ = _010_ & angle_adj[5];
  assign _012_ = ~_011_;
  assign _013_ = _010_ | angle_adj[5];
  assign _014_ = _013_ & _012_;
  assign _015_ = ~(angle_in[4] & angle_adj[4]);
  assign _016_ = ~((_005_ | _191_) & _015_);
  assign _017_ = _016_ | _164_;
  assign _018_ = ~_190_;
  assign _019_ = ~((_006_ & _189_) | _018_);
  assign _020_ = ~((_019_ | angle_in[7]) & _017_);
  assign _021_ = _020_ | _014_;
  assign _022_ = ~((_020_ & _014_) | _173_);
  assign _000_[5] = _022_ & _021_;
  assign _023_ = ~(angle_in[6] ^ angle_adj[6]);
  assign _024_ = ~((_019_ | _011_) & _013_);
  assign _025_ = ~((_024_ & _023_) | angle_in[7]);
  assign _026_ = ~((_024_ | _023_) & _025_);
  assign _027_ = angle_in[5] & angle_adj[5];
  assign _028_ = angle_in[5] | angle_adj[5];
  assign _029_ = ~((_028_ & _016_) | _027_);
  assign _030_ = _029_ & _023_;
  assign _031_ = ~((_029_ | _023_) & angle_in[7]);
  assign _032_ = _031_ | _030_;
  assign _000_[6] = ~((_032_ & _026_) | _173_);
  assign _033_ = ~angle_adj[7];
  assign _034_ = ~angle_in[6];
  assign _035_ = _034_ | angle_adj[6];
  assign _036_ = ~((angle_in[6] & angle_adj[6]) | _031_);
  assign _037_ = ~((_025_ & _035_) | _036_);
  assign _038_ = _037_ | _033_;
  assign _039_ = ~((_037_ & _033_) | _173_);
  assign _000_[7] = _039_ & _038_;
  assign _040_ = x_in[0] & y_in[7];
  assign _041_ = ~((x_in[0] | y_in[7]) & rst_n);
  assign _001_[0] = ~(_041_ | _040_);
  assign _042_ = ~x_in[1];
  assign _043_ = ~(x_in[0] & angle_in[7]);
  assign _044_ = y_in[7] & angle_in[7];
  assign _045_ = ~((_044_ | _040_) & _043_);
  assign _046_ = _045_ | _042_;
  assign _047_ = ~((_045_ & _042_) | _173_);
  assign _001_[1] = _047_ & _046_;
  assign _048_ = ~x_in[2];
  assign _049_ = ~(x_in[1] | x_in[0]);
  assign _050_ = _049_ & _044_;
  assign _051_ = x_in[1] & x_in[0];
  assign _052_ = y_in[7] & _164_;
  assign _053_ = _052_ & _051_;
  assign _054_ = ~(_053_ | _050_);
  assign _055_ = _054_ | _048_;
  assign _056_ = ~((_054_ & _048_) | _173_);
  assign _001_[2] = _056_ & _055_;
  assign _057_ = _048_ ? _050_ : _053_;
  assign _058_ = _057_ | x_in[3];
  assign _059_ = ~((_057_ & x_in[3]) | _173_);
  assign _001_[3] = _059_ & _058_;
  assign _060_ = ~_044_;
  assign _061_ = x_in[3] & x_in[2];
  assign _062_ = _061_ & _051_;
  assign _063_ = ~(_062_ & y_in[7]);
  assign _064_ = _063_ ^ x_in[4];
  assign _065_ = ~x_in[4];
  assign _066_ = ~(x_in[3] | x_in[2]);
  assign _067_ = _066_ & _049_;
  assign _068_ = _067_ & _065_;
  assign _069_ = ~((_067_ | _065_) & _044_);
  assign _070_ = ~((_069_ | _068_) & rst_n);
  assign _001_[4] = ~((_064_ & _060_) | _070_);
  assign _071_ = ~x_in[5];
  assign _072_ = _063_ | _065_;
  assign _073_ = ~(_068_ & y_in[7]);
  assign _074_ = _164_ ? _072_ : _073_;
  assign _075_ = _074_ | _071_;
  assign _076_ = ~((_074_ & _071_) | _173_);
  assign _001_[5] = _076_ & _075_;
  assign _077_ = ~x_in[6];
  assign _078_ = x_in[5] & x_in[4];
  assign _079_ = _078_ & _062_;
  assign _080_ = _068_ & _071_;
  assign _081_ = ~((_080_ & _044_) | (_079_ & _052_));
  assign _082_ = ~((_081_ | _077_) & rst_n);
  assign _001_[6] = ~((_081_ & _077_) | _082_);
  assign _083_ = ~(_079_ & x_in[6]);
  assign _084_ = ~((_080_ & _077_) | _060_);
  assign _085_ = ~((_083_ & _052_) | _084_);
  assign _086_ = ~(x_in[7] ^ y_in[7]);
  assign _087_ = _086_ ^ _085_;
  assign _001_[7] = _087_ & rst_n;
  assign _088_ = y_in[0] ^ x_in[7];
  assign _002_[0] = _088_ & rst_n;
  assign _089_ = ~y_in[1];
  assign _090_ = ~x_in[7];
  assign _091_ = y_in[0] ^ angle_in[7];
  assign _092_ = _091_ | _090_;
  assign _093_ = _092_ | _089_;
  assign _094_ = ~((_092_ & _089_) | _173_);
  assign _002_[1] = _094_ & _093_;
  assign _095_ = y_in[2] | _090_;
  assign _096_ = ~(y_in[1] | y_in[0]);
  assign _097_ = ~_096_;
  assign _098_ = ~(y_in[2] & x_in[7]);
  assign _099_ = _097_ ? _095_ : _098_;
  assign _100_ = ~(_099_ | angle_in[7]);
  assign _101_ = y_in[1] & y_in[0];
  assign _102_ = ~_101_;
  assign _103_ = _102_ ? _095_ : _098_;
  assign _104_ = y_in[2] | x_in[7];
  assign _105_ = _104_ & rst_n;
  assign _106_ = ~((_103_ | _164_) & _105_);
  assign _002_[2] = ~(_106_ | _100_);
  assign _107_ = ~y_in[3];
  assign _108_ = _102_ | _098_;
  assign _109_ = _097_ | _095_;
  assign _110_ = angle_in[7] ? _108_ : _109_;
  assign _111_ = _110_ | _107_;
  assign _112_ = ~((_110_ & _107_) | _173_);
  assign _002_[3] = _112_ & _111_;
  assign _113_ = _096_ | _095_;
  assign _114_ = ~((y_in[3] | y_in[2]) & x_in[7]);
  assign _115_ = _114_ & _113_;
  assign _116_ = ~(y_in[4] ^ x_in[7]);
  assign _117_ = ~(_116_ | _115_);
  assign _118_ = _116_ & _115_;
  assign _119_ = ~((_118_ | _117_) & _164_);
  assign _120_ = ~(_108_ | _107_);
  assign _121_ = ~(_120_ | y_in[4]);
  assign _122_ = _120_ & y_in[4];
  assign _123_ = ~((_122_ | _121_) & angle_in[7]);
  assign _124_ = _123_ & rst_n;
  assign _002_[4] = _124_ & _119_;
  assign _125_ = y_in[4] & x_in[7];
  assign _126_ = _117_ | _125_;
  assign _127_ = y_in[5] ^ x_in[7];
  assign _128_ = ~(_127_ ^ _126_);
  assign _129_ = _122_ ^ y_in[5];
  assign _130_ = ~((_129_ | _164_) & rst_n);
  assign _002_[5] = ~((_128_ & _164_) | _130_);
  assign _131_ = y_in[6] ^ x_in[7];
  assign _132_ = ~_131_;
  assign _133_ = y_in[5] & y_in[4];
  assign _134_ = y_in[3] & y_in[2];
  assign _135_ = ~(_134_ & _133_);
  assign _136_ = _135_ | _102_;
  assign _137_ = _136_ & x_in[7];
  assign _138_ = _137_ | _164_;
  assign _139_ = ~(_127_ & _117_);
  assign _140_ = ~((y_in[5] | y_in[4]) & x_in[7]);
  assign _141_ = ~(_140_ & _139_);
  assign _142_ = ~((_141_ | angle_in[7]) & _138_);
  assign _143_ = ~(_141_ & _131_);
  assign _144_ = ~(y_in[6] | _090_);
  assign _145_ = _144_ & angle_in[7];
  assign _146_ = ~((_145_ & _136_) | _173_);
  assign _147_ = ~((_143_ | angle_in[7]) & _146_);
  assign _002_[6] = ~((_142_ & _132_) | _147_);
  assign _148_ = _141_ & _131_;
  assign _149_ = y_in[6] & x_in[7];
  assign _150_ = _149_ | angle_in[7];
  assign _151_ = ~((_150_ | _148_) & (_144_ | _138_));
  assign _152_ = _151_ | _086_;
  assign _153_ = ~((_151_ & _086_) | _173_);
  assign _002_[7] = _153_ & _152_;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = { x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7] };
  assign shifted_y = { y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7] };
  assign sign = angle_in[7];
endmodule

(* src = "input/cordic_9_8.v:7" *)
module \$paramod\cordic_stage_8\SHIFT=8 (clk, rst_n, x_in, y_in, angle_in, angle_adj, x_out, y_out, angle_out);
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _000_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _001_;
  (* src = "input/cordic_9_8.v:43" *)
  wire [7:0] _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  (* src = "input/cordic_9_8.v:16" *)
  input [7:0] angle_adj;
  (* src = "input/cordic_9_8.v:15" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:21" *)
  output [7:0] angle_out;
  reg [7:0] angle_out;
  (* src = "input/cordic_9_8.v:11" *)
  input clk;
  (* src = "input/cordic_9_8.v:12" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:29" *)
  wire [7:0] shifted_x;
  (* src = "input/cordic_9_8.v:30" *)
  wire [7:0] shifted_y;
  (* src = "input/cordic_9_8.v:28" *)
  wire sign;
  (* src = "input/cordic_9_8.v:13" *)
  input [7:0] x_in;
  (* src = "input/cordic_9_8.v:19" *)
  output [7:0] x_out;
  reg [7:0] x_out;
  (* src = "input/cordic_9_8.v:14" *)
  input [7:0] y_in;
  (* src = "input/cordic_9_8.v:20" *)
  output [7:0] y_out;
  reg [7:0] y_out;
  assign _154_ = y_in[0] ^ x_in[7];
  assign _002_[0] = _154_ & rst_n;
  assign _155_ = ~y_in[1];
  assign _156_ = ~x_in[7];
  assign _157_ = y_in[0] ^ angle_in[7];
  assign _158_ = _157_ | _156_;
  assign _159_ = _158_ | _155_;
  assign _160_ = ~rst_n;
  assign _161_ = ~((_158_ & _155_) | _160_);
  assign _002_[1] = _161_ & _159_;
  assign _162_ = y_in[2] | _156_;
  assign _163_ = ~(y_in[1] | y_in[0]);
  assign _164_ = ~_163_;
  assign _165_ = y_in[2] & x_in[7];
  assign _166_ = ~_165_;
  assign _167_ = _164_ ? _162_ : _166_;
  assign _168_ = ~(_167_ | angle_in[7]);
  assign _169_ = ~angle_in[7];
  assign _170_ = y_in[1] & y_in[0];
  assign _171_ = _170_ ? _166_ : _162_;
  assign _172_ = y_in[2] | x_in[7];
  assign _173_ = _172_ & rst_n;
  assign _174_ = ~((_171_ | _169_) & _173_);
  assign _002_[2] = ~(_174_ | _168_);
  assign _175_ = ~y_in[3];
  assign _176_ = ~(_170_ & _165_);
  assign _177_ = _164_ | _162_;
  assign _178_ = angle_in[7] ? _176_ : _177_;
  assign _179_ = _178_ | _175_;
  assign _180_ = ~((_178_ & _175_) | _160_);
  assign _002_[3] = _180_ & _179_;
  assign _181_ = _163_ | _162_;
  assign _182_ = ~((y_in[3] | y_in[2]) & x_in[7]);
  assign _183_ = _182_ & _181_;
  assign _184_ = ~(y_in[4] ^ x_in[7]);
  assign _185_ = ~(_184_ | _183_);
  assign _186_ = _184_ & _183_;
  assign _187_ = ~((_186_ | _185_) & _169_);
  assign _188_ = ~(_176_ | _175_);
  assign _189_ = ~(_188_ | y_in[4]);
  assign _190_ = _188_ & y_in[4];
  assign _191_ = ~((_190_ | _189_) & angle_in[7]);
  assign _003_ = _191_ & rst_n;
  assign _002_[4] = _003_ & _187_;
  assign _004_ = y_in[4] & x_in[7];
  assign _005_ = ~(_185_ | _004_);
  assign _006_ = y_in[5] ^ x_in[7];
  assign _007_ = _006_ ^ _005_;
  assign _008_ = _190_ ^ y_in[5];
  assign _009_ = ~((_008_ | _169_) & rst_n);
  assign _002_[5] = ~((_007_ & _169_) | _009_);
  assign _010_ = y_in[5] & y_in[4];
  assign _011_ = y_in[3] & y_in[2];
  assign _012_ = _011_ & _010_;
  assign _013_ = _012_ & _170_;
  assign _014_ = ~((_013_ | _156_) & angle_in[7]);
  assign _015_ = y_in[6] ^ x_in[7];
  assign _016_ = ~_015_;
  assign _017_ = _016_ | _014_;
  assign _018_ = ~(y_in[6] & x_in[7]);
  assign _019_ = ~(_018_ | _013_);
  assign _020_ = ~(y_in[5] & x_in[7]);
  assign _021_ = ~((_006_ & _185_) | _004_);
  assign _022_ = ~(_021_ & _020_);
  assign _023_ = ~((_022_ & _015_) | angle_in[7]);
  assign _024_ = _022_ | _015_;
  assign _025_ = ~((_024_ & _023_) | (_019_ & angle_in[7]));
  assign _002_[6] = ~((_025_ & _017_) | _160_);
  assign _026_ = ~y_in[6];
  assign _027_ = ~((_026_ & x_in[7]) | _014_);
  assign _028_ = ~((_023_ & _018_) | _027_);
  assign _029_ = x_in[7] ^ y_in[7];
  assign _030_ = _029_ ^ _028_;
  assign _002_[7] = _030_ & rst_n;
  assign _031_ = angle_in[0] ^ angle_adj[0];
  assign _000_[0] = _031_ & rst_n;
  assign _032_ = angle_in[1] ^ angle_adj[1];
  assign _033_ = angle_in[0] & angle_adj[0];
  assign _034_ = ~_033_;
  assign _035_ = ~angle_in[0];
  assign _036_ = _035_ & angle_adj[0];
  assign _037_ = ~_036_;
  assign _038_ = angle_in[7] ? _034_ : _037_;
  assign _039_ = ~(_038_ ^ _032_);
  assign _000_[1] = _039_ & rst_n;
  assign _040_ = ~(angle_in[2] ^ angle_adj[2]);
  assign _041_ = ~angle_in[1];
  assign _042_ = _041_ & angle_adj[1];
  assign _043_ = _041_ | angle_adj[1];
  assign _044_ = ~((_036_ & _043_) | _042_);
  assign _045_ = angle_in[1] & angle_adj[1];
  assign _046_ = ~((_032_ & _033_) | _045_);
  assign _047_ = _169_ ? _044_ : _046_;
  assign _048_ = _047_ | _040_;
  assign _049_ = ~((_047_ & _040_) | _160_);
  assign _000_[2] = _049_ & _048_;
  assign _050_ = ~angle_in[3];
  assign _051_ = _050_ & angle_adj[3];
  assign _052_ = ~_051_;
  assign _053_ = _050_ | angle_adj[3];
  assign _054_ = _053_ & _052_;
  assign _055_ = ~angle_adj[2];
  assign _056_ = angle_in[2] | _055_;
  assign _057_ = angle_in[2] & _055_;
  assign _058_ = ~((_044_ | _057_) & _056_);
  assign _059_ = ~(angle_in[2] & angle_adj[2]);
  assign _060_ = ~((_046_ | _040_) & _059_);
  assign _061_ = _169_ ? _058_ : _060_;
  assign _062_ = ~(_061_ ^ _054_);
  assign _000_[3] = _062_ & rst_n;
  assign _063_ = ~angle_adj[4];
  assign _064_ = angle_in[4] | _063_;
  assign _065_ = ~(angle_in[4] & _063_);
  assign _066_ = _065_ & _064_;
  assign _067_ = angle_in[3] | angle_adj[3];
  assign _068_ = angle_in[3] & angle_adj[3];
  assign _069_ = ~((_068_ | _060_) & _067_);
  assign _070_ = ~((_058_ | _051_) & _053_);
  assign _071_ = angle_in[7] ? _069_ : _070_;
  assign _072_ = _071_ | _066_;
  assign _073_ = ~((_071_ & _066_) | _160_);
  assign _000_[4] = _073_ & _072_;
  assign _074_ = ~angle_in[5];
  assign _075_ = _074_ & angle_adj[5];
  assign _076_ = ~_075_;
  assign _077_ = _074_ | angle_adj[5];
  assign _078_ = _077_ & _076_;
  assign _079_ = ~(angle_in[4] & angle_adj[4]);
  assign _080_ = ~((_069_ | _066_) & _079_);
  assign _081_ = _080_ | _169_;
  assign _082_ = ~_065_;
  assign _083_ = ~((_070_ & _064_) | _082_);
  assign _084_ = ~((_083_ | angle_in[7]) & _081_);
  assign _085_ = _084_ | _078_;
  assign _086_ = ~((_084_ & _078_) | _160_);
  assign _000_[5] = _086_ & _085_;
  assign _087_ = ~(angle_in[6] ^ angle_adj[6]);
  assign _088_ = ~((_083_ | _075_) & _077_);
  assign _089_ = ~((_088_ & _087_) | angle_in[7]);
  assign _090_ = ~((_088_ | _087_) & _089_);
  assign _091_ = angle_in[5] & angle_adj[5];
  assign _092_ = angle_in[5] | angle_adj[5];
  assign _093_ = ~((_092_ & _080_) | _091_);
  assign _094_ = _093_ & _087_;
  assign _095_ = ~((_093_ | _087_) & angle_in[7]);
  assign _096_ = _095_ | _094_;
  assign _000_[6] = ~((_096_ & _090_) | _160_);
  assign _097_ = ~angle_adj[7];
  assign _098_ = ~angle_in[6];
  assign _099_ = _098_ | angle_adj[6];
  assign _100_ = ~((angle_in[6] & angle_adj[6]) | _095_);
  assign _101_ = ~((_089_ & _099_) | _100_);
  assign _102_ = _101_ | _097_;
  assign _103_ = ~((_101_ & _097_) | _160_);
  assign _000_[7] = _103_ & _102_;
  assign _104_ = x_in[0] & y_in[7];
  assign _105_ = ~((x_in[0] | y_in[7]) & rst_n);
  assign _001_[0] = ~(_105_ | _104_);
  assign _106_ = ~x_in[1];
  assign _107_ = ~(x_in[0] & angle_in[7]);
  assign _108_ = y_in[7] & angle_in[7];
  assign _109_ = ~((_108_ | _104_) & _107_);
  assign _110_ = _109_ | _106_;
  assign _111_ = ~((_109_ & _106_) | _160_);
  assign _001_[1] = _111_ & _110_;
  assign _112_ = ~x_in[2];
  assign _113_ = ~(x_in[1] | x_in[0]);
  assign _114_ = _113_ & _108_;
  assign _115_ = x_in[1] & x_in[0];
  assign _116_ = y_in[7] & _169_;
  assign _117_ = _116_ & _115_;
  assign _118_ = ~(_117_ | _114_);
  assign _119_ = _118_ | _112_;
  assign _120_ = ~((_118_ & _112_) | _160_);
  assign _001_[2] = _120_ & _119_;
  assign _121_ = _112_ ? _114_ : _117_;
  assign _122_ = _121_ | x_in[3];
  assign _123_ = ~((_121_ & x_in[3]) | _160_);
  assign _001_[3] = _123_ & _122_;
  assign _124_ = ~_108_;
  assign _125_ = x_in[3] & x_in[2];
  assign _126_ = _125_ & _115_;
  assign _127_ = ~(_126_ & y_in[7]);
  assign _128_ = _127_ ^ x_in[4];
  assign _129_ = ~x_in[4];
  assign _130_ = ~(x_in[3] | x_in[2]);
  assign _131_ = _130_ & _113_;
  assign _132_ = _131_ & _129_;
  assign _133_ = ~((_131_ | _129_) & _108_);
  assign _134_ = ~((_133_ | _132_) & rst_n);
  assign _001_[4] = ~((_128_ & _124_) | _134_);
  assign _135_ = ~x_in[5];
  assign _136_ = _127_ | _129_;
  assign _137_ = ~(_132_ & y_in[7]);
  assign _138_ = _169_ ? _136_ : _137_;
  assign _139_ = _138_ | _135_;
  assign _140_ = ~((_138_ & _135_) | _160_);
  assign _001_[5] = _140_ & _139_;
  assign _141_ = ~x_in[6];
  assign _142_ = x_in[5] & x_in[4];
  assign _143_ = _142_ & _126_;
  assign _144_ = ~(_132_ & _135_);
  assign _145_ = ~(_144_ | _124_);
  assign _146_ = ~((_143_ & _116_) | _145_);
  assign _147_ = ~((_146_ | _141_) & rst_n);
  assign _001_[6] = ~((_146_ & _141_) | _147_);
  assign _148_ = ~_116_;
  assign _149_ = _143_ & x_in[6];
  assign _150_ = ~((_144_ | x_in[6]) & _108_);
  assign _151_ = ~((_149_ | _148_) & _150_);
  assign _152_ = _151_ | _029_;
  assign _153_ = ~((_151_ & _029_) | _160_);
  assign _001_[7] = _153_ & _152_;
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[0] <= _001_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[1] <= _001_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[2] <= _001_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[3] <= _001_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[4] <= _001_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[5] <= _001_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[6] <= _001_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      x_out[7] <= _001_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[0] <= _002_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[1] <= _002_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[2] <= _002_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[3] <= _002_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[4] <= _002_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[5] <= _002_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[6] <= _002_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      y_out[7] <= _002_[7];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[0] <= _000_[0];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[1] <= _000_[1];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[2] <= _000_[2];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[3] <= _000_[3];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[4] <= _000_[4];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[5] <= _000_[5];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[6] <= _000_[6];
  (* src = "input/cordic_9_8.v:43" *)
  always @(posedge clk)
      angle_out[7] <= _000_[7];
  assign shifted_x = { x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7], x_in[7] };
  assign shifted_y = { y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7], y_in[7] };
  assign sign = angle_in[7];
endmodule

(* top =  1  *)
(* src = "input/cordic_9_8.v:61" *)
module cordic_9_8(clk, rst_n, angle_in, cos_out, sin_out);
  (* src = "input/cordic_9_8.v:84" *)
  wire [7:0] _00_;
  (* src = "input/cordic_9_8.v:84" *)
  wire [7:0] _01_;
  wire _02_;
  (* src = "input/cordic_9_8.v:66" *)
  input [7:0] angle_in;
  (* src = "input/cordic_9_8.v:64" *)
  input clk;
  (* src = "input/cordic_9_8.v:69" *)
  output [7:0] cos_out;
  (* src = "input/cordic_9_8.v:65" *)
  input rst_n;
  (* src = "input/cordic_9_8.v:70" *)
  output [7:0] sin_out;
  (* src = "input/cordic_9_8.v:73" *)
  wire [7:0] x_in;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[0] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[1] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[2] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[3] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[4] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[5] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[6] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[7] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \xbus[8] ;
  (* src = "input/cordic_9_8.v:74" *)
  wire [7:0] y_in;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[0] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[1] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[2] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[3] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[4] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[5] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[6] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[7] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \ybus[8] ;
  (* src = "input/cordic_9_8.v:75" *)
  wire [7:0] z_in;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \zbus[0] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \zbus[1] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \zbus[2] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \zbus[3] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \zbus[4] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \zbus[5] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \zbus[6] ;
  (* src = "input/cordic_9_8.v:61" *)
  wire [7:0] \zbus[7] ;
  (* src = "input/cordic_9_8.v:61" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] \zbus[8] ;
  assign _00_[6] = ~(angle_in[7] ^ angle_in[6]);
  assign _01_[0] = angle_in[7] ^ angle_in[6];
  assign _02_ = ~angle_in[7];
  assign _01_[7] = ~(_02_ | angle_in[6]);
  assign _01_[6] = _02_ & angle_in[6];
  \$_DLATCH_P_  _08_ (
    .D(_00_[6]),
    .E(1'b1),
    .Q(x_in[3])
  );
  \$_DLATCH_P_  _09_ (
    .D(1'b0),
    .E(1'b1),
    .Q(x_in[5])
  );
  \$_DLATCH_P_  _10_ (
    .D(_01_[0]),
    .E(1'b1),
    .Q(y_in[0])
  );
  \$_DLATCH_P_  _11_ (
    .D(_01_[7]),
    .E(1'b1),
    .Q(y_in[5])
  );
  \$_DLATCH_P_  _12_ (
    .D(_01_[6]),
    .E(1'b1),
    .Q(y_in[6])
  );
  \$_DLATCH_P_  _13_ (
    .D(angle_in[0]),
    .E(1'b1),
    .Q(z_in[0])
  );
  \$_DLATCH_P_  _14_ (
    .D(angle_in[1]),
    .E(1'b1),
    .Q(z_in[1])
  );
  \$_DLATCH_P_  _15_ (
    .D(angle_in[2]),
    .E(1'b1),
    .Q(z_in[2])
  );
  \$_DLATCH_P_  _16_ (
    .D(angle_in[3]),
    .E(1'b1),
    .Q(z_in[3])
  );
  \$_DLATCH_P_  _17_ (
    .D(angle_in[4]),
    .E(1'b1),
    .Q(z_in[4])
  );
  \$_DLATCH_P_  _18_ (
    .D(angle_in[5]),
    .E(1'b1),
    .Q(z_in[5])
  );
  \$_DLATCH_P_  _19_ (
    .D(angle_in[7]),
    .E(1'b1),
    .Q(z_in[6])
  );
  \$_DLATCH_P_  _20_ (
    .D(angle_in[7]),
    .E(1'b1),
    .Q(z_in[7])
  );
  (* src = "input/cordic_9_8.v:115" *)
  \$paramod\cordic_stage_8\SHIFT=0  stage0 (
    .angle_adj(8'b00100000),
    .angle_in(z_in),
    .angle_out(\zbus[0] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in({ x_in[5], x_in[3], x_in[5], x_in[5], x_in[3], x_in[3], x_in[5], x_in[3] }),
    .x_out(\xbus[0] ),
    .y_in({ y_in[5], y_in[6:5], y_in[5], y_in[6], y_in[6:5], y_in[0] }),
    .y_out(\ybus[0] )
  );
  (* src = "input/cordic_9_8.v:116" *)
  \$paramod\cordic_stage_8\SHIFT=1  stage1 (
    .angle_adj(8'b00010011),
    .angle_in(\zbus[0] ),
    .angle_out(\zbus[1] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in(\xbus[0] ),
    .x_out(\xbus[1] ),
    .y_in(\ybus[0] ),
    .y_out(\ybus[1] )
  );
  (* src = "input/cordic_9_8.v:117" *)
  \$paramod\cordic_stage_8\SHIFT=2  stage2 (
    .angle_adj(8'b00001010),
    .angle_in(\zbus[1] ),
    .angle_out(\zbus[2] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in(\xbus[1] ),
    .x_out(\xbus[2] ),
    .y_in(\ybus[1] ),
    .y_out(\ybus[2] )
  );
  (* src = "input/cordic_9_8.v:118" *)
  \$paramod\cordic_stage_8\SHIFT=3  stage3 (
    .angle_adj(8'b00000101),
    .angle_in(\zbus[2] ),
    .angle_out(\zbus[3] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in(\xbus[2] ),
    .x_out(\xbus[3] ),
    .y_in(\ybus[2] ),
    .y_out(\ybus[3] )
  );
  (* src = "input/cordic_9_8.v:119" *)
  \$paramod\cordic_stage_8\SHIFT=4  stage4 (
    .angle_adj(8'b00000011),
    .angle_in(\zbus[3] ),
    .angle_out(\zbus[4] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in(\xbus[3] ),
    .x_out(\xbus[4] ),
    .y_in(\ybus[3] ),
    .y_out(\ybus[4] )
  );
  (* src = "input/cordic_9_8.v:120" *)
  \$paramod\cordic_stage_8\SHIFT=5  stage5 (
    .angle_adj(8'b00000001),
    .angle_in(\zbus[4] ),
    .angle_out(\zbus[5] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in(\xbus[4] ),
    .x_out(\xbus[5] ),
    .y_in(\ybus[4] ),
    .y_out(\ybus[5] )
  );
  (* src = "input/cordic_9_8.v:121" *)
  \$paramod\cordic_stage_8\SHIFT=6  stage6 (
    .angle_adj(8'b00000001),
    .angle_in(\zbus[5] ),
    .angle_out(\zbus[6] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in(\xbus[5] ),
    .x_out(\xbus[6] ),
    .y_in(\ybus[5] ),
    .y_out(\ybus[6] )
  );
  (* src = "input/cordic_9_8.v:122" *)
  \$paramod\cordic_stage_8\SHIFT=7  stage7 (
    .angle_adj(8'b00000000),
    .angle_in(\zbus[6] ),
    .angle_out(\zbus[7] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in(\xbus[6] ),
    .x_out(\xbus[7] ),
    .y_in(\ybus[6] ),
    .y_out(\ybus[7] )
  );
  (* src = "input/cordic_9_8.v:123" *)
  \$paramod\cordic_stage_8\SHIFT=8  stage8 (
    .angle_adj(8'b00000000),
    .angle_in(\zbus[7] ),
    .angle_out(\zbus[8] ),
    .clk(clk),
    .rst_n(rst_n),
    .x_in(\xbus[7] ),
    .x_out(\xbus[8] ),
    .y_in(\ybus[7] ),
    .y_out(\ybus[8] )
  );
  assign cos_out = \xbus[8] ;
  assign sin_out = \ybus[8] ;
  assign { x_in[7:6], x_in[4], x_in[2:0] } = { x_in[5], x_in[3], x_in[5], x_in[3], x_in[5], x_in[3] };
  assign { y_in[7], y_in[4:1] } = { y_in[5], y_in[5], y_in[6], y_in[6:5] };
endmodule
